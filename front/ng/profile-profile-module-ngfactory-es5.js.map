{"version":3,"sources":["webpack:///node_modules/@angular/material/checkbox/index.d.ts.MatCheckbox.html","webpack:///node_modules/@angular/material/chips/index.d.ts.MatChipList.html","webpack:///node_modules/@angular/material/icon/index.d.ts.MatIcon.html","webpack:///node_modules/@angular/material/menu/index.d.ts._MatMenu.html","webpack:///node_modules/@angular/material/menu/index.d.ts.MatMenuItem.html","webpack:///node_modules/@angular/material/sidenav/index.d.ts.MatDrawerContent.html","webpack:///node_modules/@angular/material/sidenav/index.d.ts.MatDrawer.html","webpack:///node_modules/@angular/material/sidenav/index.d.ts.MatDrawerContainer.html","webpack:///node_modules/@angular/material/sidenav/index.d.ts.MatSidenavContent.html","webpack:///node_modules/@angular/material/sidenav/index.d.ts.MatSidenav.html","webpack:///node_modules/@angular/material/sidenav/index.d.ts.MatSidenavContainer.html","webpack:///node_modules/@angular/material/slide-toggle/index.d.ts.MatSlideToggle.html","webpack:///node_modules/@angular/material/toolbar/index.d.ts.MatToolbar.html","webpack:///src/app/profile/notification/notification.component.html","webpack:///src/app/profile/notification/notification.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.module.ts","webpack:///src/app/profile/shared/components/isotope-container/isotope-container.component.html","webpack:///src/app/profile/shared/components/isotope-container/isotope-container.component.ts","webpack:///src/app/profile/shared/components/search/search.component.html","webpack:///src/app/profile/shared/components/search/search.component.ts","webpack:///src/app/profile/shared/profile-shared.module.ts","webpack:///src/app/profile/shared/services/contacts.service.ts","webpack:///src/app/profile/shared/services/dialog-overview.service.ts","webpack:///src/app/profile/shared/services/file-manager.service.ts","webpack:///src/app/profile/shared/services/tasks.service.ts","webpack:///src/app/profile/shared/services/xml-builder.service.ts","webpack:///src/app/profile/tasks/pipes/fixed-tasks.pipe.ts","webpack:///src/app/profile/tasks/shared/components/task-action/task-action.component.html","webpack:///src/app/profile/tasks/shared/components/task-action/task-action.component.ts","webpack:///src/app/profile/tasks/shared/components/task-card/task-card.component.html","webpack:///src/app/profile/tasks/shared/components/task-card/task-card.component.ts","webpack:///src/app/profile/tasks/shared/components/task-contacts/task-contacts.component.html","webpack:///src/app/profile/tasks/shared/components/task-contacts/task-contacts.component.ts","webpack:///src/app/profile/tasks/shared/tasks-shared.module.ts","webpack:///src/app/profile/tasks/tasks-page/tasks-page.component.html","webpack:///src/app/profile/tasks/tasks-page/tasks-page.component.ts","webpack:///src/app/profile/tasks/tasks.module.ts","webpack:///src/app/shared/directives/text-area-auto-resize.directive.ts"],"names":["NotificationComponent","tasksService","router","enable","taskNotifications","subscription","unsubscribe","check$","subscribe","tasks","console","log","length","task","push","notification","navigate","queryParams","select","id","onHide","filter","ProfileComponent","auth","contactsService","getAll","contactsLoaded","tasksLoaded","startChecking","stopChecking","signOut","then","m","ProfileModule","IsotopeContainerComponent","container","isotope","Isotope","nativeElement","itemSelector","selector","layoutMode","mutationsObserver","MutationObserver","mutations","mutation","addedNodes","i","prepended","item","removedNodes","remove","layout","observe","childList","attributeFilter","destroy","disconnect","SearchComponent","onInputEvent","category","isActive","value","inputValue","searchResult","subSelectors","searchOptions","emit","clearAll","activeSubSelectors","ctg","curSelectors","elements","document","querySelectorAll","element","markBySelectors","selectors","child","querySelector","startMarkIndex","textContent","search","mark","classList","add","markedElements","j","innerHTML","start","end","substring","ProfileSharedModule","ContactsService","http","xmlBuilder","fileManager","snackbarService","REQUEST_URL","serverUrl","get","pipe","response","xmlToContacts","contacts","newContact","params","action","xml","contactToXml","post","generatedId","openSnackBar","contact","index","findIndex","ct","upload","sub","uploadResult","result","unload","contactsToXml","categories","DialogOverviewService","matDialog","component","data","changeUrl","dialog","open","width","afterClosed","FileManagerService","reader","FileReader","form","createElement","inputElement","setAttribute","linkElement","style","display","onchange","event","Promise","resolve","onload","r","next","reset","readAsText","target","files","appendChild","body","content","fileName","file","File","URL","createObjectURL","click","revokeObjectURL","getAttribute","removeAttribute","TasksService","xmlToTasks","checkSubscription","tsk","complete","newTask","taskToXml","tasksToXml","XmlBuilderService","_datePipe","tasksElement","createTaskElement","outerHTML","contactsElement","createContactElement","root","parser","DOMParser","parseFromString","taskElements","childNodes","taskElement","name","description","completed","fixed","notifyDatetime","notifyTimestamp","Date","tag","contactElements","contactElement","phone_number","transform","elementName","innerText","FixedTasksPipe","TaskActionComponent","thisDialog","initForm","setCreateFormValues","setEditFormValues","required","addControl","Object","assign","setValue","submitValue","submitHandler","edit","date","create","time","getCheckedContactsArray","update","close","replaceUrl","contactsGroup","controlName","controls","find","TaskCardComponent","route","dialogOverview","el","isSelected","scrollIntoView","behavior","clone","openDialog","TaskContactsComponent","TasksSharedModule","TasksPageComponent","searchedTasks","noSearchedTasks","searchNow","uniqueAttribute","TasksModule","TextAreaAutoResize","renderer","setStyle","height","minHeight","scrollHeight"],"mappings":"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","file":"profile-profile-module-ngfactory-es5.js","sourcesContent":["<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label>\n  <div class=\"mat-checkbox-inner-container\"\n       [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\">\n    <input #input\n           class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [attr.value]=\"value\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [tabIndex]=\"tabIndex\"\n           [attr.aria-label]=\"ariaLabel || null\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-checked]=\"_getAriaChecked()\"\n           (change)=\"_onInteractionEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n    <div matRipple class=\"mat-checkbox-ripple mat-focus-indicator\"\n         [matRippleTrigger]=\"label\"\n         [matRippleDisabled]=\"_isRippleDisabled()\"\n         [matRippleRadius]=\"20\"\n         [matRippleCentered]=\"true\"\n         [matRippleAnimation]=\"{enterDuration: 150}\">\n      <div class=\"mat-ripple-element mat-checkbox-persistent-ripple\"></div>\n    </div>\n    <div class=\"mat-checkbox-frame\"></div>\n    <div class=\"mat-checkbox-background\">\n      <svg version=\"1.1\"\n           focusable=\"false\"\n           class=\"mat-checkbox-checkmark\"\n           viewBox=\"0 0 24 24\"\n           xml:space=\"preserve\">\n        <path class=\"mat-checkbox-checkmark-path\"\n              fill=\"none\"\n              stroke=\"white\"\n              d=\"M4.1,12.7 9,17.6 20.3,6.3\"/>\n      </svg>\n      <!-- Element for rendering the indeterminate state checkbox. -->\n      <div class=\"mat-checkbox-mixedmark\"></div>\n    </div>\n  </div>\n  <span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n","<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>","<ng-content></ng-content>","<ng-template>\n  <div\n    class=\"mat-menu-panel\"\n    [id]=\"panelId\"\n    [ngClass]=\"_classList\"\n    (keydown)=\"_handleKeydown($event)\"\n    (click)=\"closed.emit('click')\"\n    [@transformMenu]=\"_panelAnimationState\"\n    (@transformMenu.start)=\"_onAnimationStart($event)\"\n    (@transformMenu.done)=\"_onAnimationDone($event)\"\n    tabindex=\"-1\"\n    role=\"menu\"\n    [attr.aria-label]=\"ariaLabel || null\"\n    [attr.aria-labelledby]=\"ariaLabelledby || null\"\n    [attr.aria-describedby]=\"ariaDescribedby || null\">\n    <div class=\"mat-menu-content\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</ng-template>\n","<ng-content></ng-content>\n<div class=\"mat-menu-ripple\" matRipple\n     [matRippleDisabled]=\"disableRipple || disabled\"\n     [matRippleTrigger]=\"_getHostElement()\">\n</div>\n","<ng-content></ng-content>","<div class=\"mat-drawer-inner-container\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","<div class=\"mat-drawer-backdrop\" (click)=\"_onBackdropClicked()\" *ngIf=\"hasBackdrop\"\n     [class.mat-drawer-shown]=\"_isShowingBackdrop()\"></div>\n\n<ng-content select=\"mat-drawer\"></ng-content>\n\n<ng-content select=\"mat-drawer-content\">\n</ng-content>\n<mat-drawer-content *ngIf=\"!_content\">\n  <ng-content></ng-content>\n</mat-drawer-content>\n","<ng-content></ng-content>","<div class=\"mat-drawer-inner-container\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","<div class=\"mat-drawer-backdrop\" (click)=\"_onBackdropClicked()\" *ngIf=\"hasBackdrop\"\n     [class.mat-drawer-shown]=\"_isShowingBackdrop()\"></div>\n\n<ng-content select=\"mat-sidenav\"></ng-content>\n\n<ng-content select=\"mat-sidenav-content\">\n</ng-content>\n<mat-sidenav-content *ngIf=\"!_content\" cdkScrollable>\n  <ng-content></ng-content>\n</mat-sidenav-content>\n","<label [attr.for]=\"inputId\" class=\"mat-slide-toggle-label\" #label>\n  <div #toggleBar class=\"mat-slide-toggle-bar\"\n       [class.mat-slide-toggle-bar-no-side-margin]=\"!labelContent.textContent || !labelContent.textContent.trim()\">\n\n    <input #input class=\"mat-slide-toggle-input cdk-visually-hidden\" type=\"checkbox\"\n           role=\"switch\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [tabIndex]=\"tabIndex\"\n           [checked]=\"checked\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [attr.aria-checked]=\"checked.toString()\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           (change)=\"_onChangeEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n\n    <div class=\"mat-slide-toggle-thumb-container\" #thumbContainer>\n      <div class=\"mat-slide-toggle-thumb\"></div>\n      <div class=\"mat-slide-toggle-ripple mat-focus-indicator\" mat-ripple\n           [matRippleTrigger]=\"label\"\n           [matRippleDisabled]=\"disableRipple || disabled\"\n           [matRippleCentered]=\"true\"\n           [matRippleRadius]=\"20\"\n           [matRippleAnimation]=\"{enterDuration: 150}\">\n\n        <div class=\"mat-ripple-element mat-slide-toggle-persistent-ripple\"></div>\n      </div>\n    </div>\n\n  </div>\n\n  <span class=\"mat-slide-toggle-content\" #labelContent (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n","<ng-content></ng-content>\n<ng-content select=\"mat-toolbar-row\"></ng-content>\n","<div class=\"notifications flex-column ver-end\">\r\n  <div\r\n      class=\"notification flex-row ver-flex-center hor-space-between\"\r\n      *ngFor=\"let notification of taskNotifications\"\r\n  >\r\n    <span>\r\n      <b>{{notification.name}}</b>\r\n      {{notification.notifyTimestamp| date: 'short'}}\r\n    </span>\r\n    <div class=\"flex-row ver-flex-center hor-space-between\">\r\n      <button class=\"go-to-button flex-row ver-flex-center hor-flex-center\" (click)=\"onGoto(notification)\">Go to task</button>\r\n      <button class=\"close-button flex-row ver-flex-center hor-flex-center\" (click)=\"onHide(notification)\">X</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnDestroy} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {Task} from '../../shared/interfaces';\r\nimport {TasksService} from '../shared/services/tasks.service';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnDestroy {\r\n\r\n  @Input() private enable: boolean = false;\r\n  private subscription: Subscription;\r\n  taskNotifications: Task[] = [];\r\n\r\n  constructor(\r\n    public tasksService: TasksService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public toggleEnableNotifications() {\r\n    this.enable = !this.enable;\r\n\r\n    if (this.enable) {\r\n      this.subscription = this.tasksService.check$\r\n        .subscribe((tasks: Task[]) => {\r\n          console.log('Notification tick');\r\n          if (tasks.length) {\r\n            for (let task of tasks) {\r\n              this.taskNotifications.push(task);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (!this.enable) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onGoto(notification: Task) {\r\n    this.router.navigate(['/profile', 'tasks'], {\r\n      queryParams: {\r\n        select: notification.id\r\n      }\r\n    });\r\n    this.onHide(notification);\r\n  }\r\n\r\n  onHide(notification: Task) {\r\n    this.taskNotifications = this.taskNotifications.filter(task => task.id !== notification.id);\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"nav-bar\" role=\"heading\">\r\n\r\n  <div class=\"left\">\r\n    <span class=\"title\">\r\n      Web Task Manager\r\n    </span>\r\n\r\n    <nav>\r\n      <a\r\n          mat-button\r\n          routerLinkActive=\"active-link\"\r\n          [routerLink]=\"['/profile', 'tasks']\"\r\n      >Tasks</a>\r\n      <a\r\n          mat-button\r\n          routerLinkActive=\"active-link\"\r\n          [routerLink]=\"['/profile', 'contacts']\"\r\n      >Contacts</a>\r\n      <a\r\n          mat-button\r\n          routerLinkActive=\"active-link\"\r\n          [routerLink]=\"['/profile', 'remainders']\"\r\n      >Remainders</a>\r\n    </nav>\r\n  </div>\r\n\r\n  <div class=\"right\">\r\n    <mat-slide-toggle\r\n        (change)=\"notificationComponent.toggleEnableNotifications()\"\r\n    >\r\n      <span>Notifications</span>\r\n    </mat-slide-toggle>\r\n\r\n    <button\r\n        mat-button\r\n        [matMenuTriggerFor]=\"menu\"\r\n    >\r\n      <mat-icon>person</mat-icon>\r\n      {{auth.userLogin}}\r\n    </button>\r\n\r\n    <mat-menu\r\n      #menu=\"matMenu\"\r\n      xPosition=\"before\"\r\n    >\r\n      <button mat-menu-item (click)=\"onSignOut()\">Sign Out</button>\r\n    </mat-menu>\r\n  </div>\r\n\r\n</mat-toolbar>\r\n\r\n<router-outlet *ngIf=\"tasksLoaded && contactsLoaded; else elseBlock\"></router-outlet>\r\n\r\n<ng-template #elseBlock>Please wait...</ng-template>\r\n\r\n<app-notification #notificationComponent></app-notification>\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\n\r\nimport {AuthService} from '../shared/services';\r\nimport {NotificationComponent} from './notification/notification.component';\r\nimport {TasksService} from \"./shared/services/tasks.service\";\r\nimport {ContactsService} from \"./shared/services/contacts.service\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n\r\n  contactsLoaded: boolean;\r\n  tasksLoaded: boolean;\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    public tasksService: TasksService,\r\n    public contactsService: ContactsService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contactsService.getAll().subscribe(\r\n      () => {\r\n        this.contactsLoaded = true;\r\n        this.tasksService.getAll().subscribe(\r\n          () => this.tasksLoaded = true\r\n        );\r\n      }\r\n    );\r\n\r\n    this.tasksService.startChecking();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tasksService.stopChecking();\r\n  }\r\n\r\n  onSignOut() {\r\n    this.tasksService.stopChecking();\r\n    this.auth.signOut();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule, DatePipe} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nimport {ProfileComponent} from './profile.component';\r\nimport {NotificationComponent} from './notification/notification.component';\r\nimport {ContactsService} from './shared/services/contacts.service';\r\nimport {TasksService} from './shared/services/tasks.service';\r\nimport {ProfileSharedModule} from './shared/profile-shared.module';\r\nimport {FileManagerService} from './shared/services/file-manager.service';\r\nimport {XmlBuilderService} from './shared/services/xml-builder.service';\r\nimport {SnackbarService} from '../shared/services/snackbar.service';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {TasksModule} from \"./tasks/tasks.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent,\r\n    NotificationComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileSharedModule,\r\n    SharedModule,\r\n\r\n    RouterModule.forChild([\r\n      {\r\n        path: '', component: ProfileComponent, children: [\r\n          {path: '', redirectTo: '/profile/tasks', pathMatch: 'full'},\r\n          {path: 'tasks', loadChildren: () => import('./tasks/tasks.module').then(m => m.TasksModule)},\r\n          {\r\n            path: 'remainders',\r\n            loadChildren: () => import('./remainders/remainders.module').then(m => m.RemaindersModule)\r\n          },\r\n          {path: 'contacts', loadChildren: () => import('./contacts/contacts.module').then(m => m.ContactsModule)}\r\n        ]\r\n      }\r\n    ]),\r\n    TasksModule,\r\n  ],\r\n  providers: [\r\n    ContactsService,\r\n    TasksService,\r\n\r\n    FileManagerService,\r\n    SnackbarService,\r\n\r\n    XmlBuilderService,\r\n\r\n    DatePipe,\r\n  ]\r\n})\r\n\r\n// SearchService,\r\n\r\nexport class ProfileModule {\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <h2 class=\"title\" *ngIf=\"title\">{{title}}</h2>\r\n  <div #container class='isotope-container'>\r\n    <ng-content>\r\n\r\n    </ng-content>\r\n  </div>\r\n</div>\r\n","import {AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild} from \"@angular/core\";\r\n\r\ndeclare let Isotope: any;\r\n\r\n@Component({\r\n  selector: \"app-isotope-container\",\r\n  templateUrl: \"./isotope-container.component.html\",\r\n  styleUrls: [\"./isotope-container.component.css\"]\r\n})\r\nexport class IsotopeContainerComponent implements AfterViewInit, OnDestroy {\r\n\r\n  @Input() selector: string;\r\n  @Input() title: string;\r\n  @ViewChild(\"container\") container: ElementRef;\r\n\r\n  private isotope;\r\n  private mutationsObserver: MutationObserver;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.container) {\r\n      this.isotope = new Isotope(this.container.nativeElement, {\r\n        itemSelector: this.selector,\r\n        layoutMode: 'masonry',\r\n      });\r\n\r\n      this.mutationsObserver = new MutationObserver((mutations: MutationRecord[]) => {\r\n        console.log(mutations);\r\n        for (let mutation of mutations) {\r\n\r\n          if (mutation.addedNodes.length) {\r\n            for (let i = 0; i < mutation.addedNodes.length; i++) {\r\n              this.isotope.prepended(mutation.addedNodes.item(i));\r\n            }\r\n          }\r\n\r\n          if (mutation.removedNodes.length) {\r\n            for (let i = 0; i < mutation.removedNodes.length; i++) {\r\n              this.isotope.remove(mutation.removedNodes.item(i));\r\n            }\r\n          }\r\n\r\n          this.isotope.layout();\r\n        }\r\n      });\r\n\r\n      this.mutationsObserver.observe(this.container.nativeElement, {\r\n        childList: true,\r\n        attributeFilter: ['class']\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.mutationsObserver) {\r\n      this.isotope.destroy();\r\n      this.mutationsObserver.disconnect();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"search-box\">\r\n  <button\r\n      class=\"filters-button\"\r\n      [matMenuTriggerFor]=\"menu\"\r\n  >\r\n    Filters\r\n  </button>\r\n\r\n  <mat-menu\r\n    #menu=\"matMenu\"\r\n    xPosition=\"before\"\r\n  >\r\n    <button\r\n        mat-menu-item\r\n        *ngFor=\"let selector of searchOptions.subSelectors\"\r\n        (click)=\"activeSelector(selector)\"\r\n    >\r\n      <b *ngIf=\"isActiveSelector(selector)\">{{selector.name}}</b>\r\n      <span *ngIf=\"!isActiveSelector(selector)\">{{selector.name}}</span>\r\n      <img *ngIf=\"isActiveSelector(selector)\" class=\"active-selector\"/>\r\n    </button>\r\n  </mat-menu>\r\n\r\n  <input #searchInput\r\n         type=\"text\"\r\n         class=\"input\"\r\n         placeholder=\"Search\"\r\n         (input)=\"onInput(searchInput.value)\">\r\n\r\n  <div class=\"active-selectors\">\r\n    <mat-chip-list>\r\n      <div *ngFor=\"let selector of searchOptions.subSelectors\">\r\n        <mat-chip *ngIf=\"selector.isActive\">\r\n        <span>{{selector.name}}\r\n          <span\r\n              class=\"deactivate-selector\"\r\n              (click)=\"deactivateSelector(selector)\"\r\n          >X\r\n          </span>\r\n        </span>\r\n        </mat-chip>\r\n      </div>\r\n    </mat-chip-list>\r\n  </div>\r\n</div>\r\n","import {Component, EventEmitter, Input, Output} from \"@angular/core\";\r\n\r\nexport interface SearchResult {\r\n  value: string,\r\n  subSelectors: SelectorOption[];\r\n}\r\n\r\nexport interface SelectorOption {\r\n  name: string,\r\n  selector: string,\r\n  isActive: boolean\r\n}\r\n\r\nexport interface SearchOptions {\r\n  selector: string;\r\n  subSelectors: SelectorOption[];\r\n  uniqueAttribute: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: \"./search.component.html\",\r\n  styleUrls: [\"./search.component.css\"],\r\n})\r\nexport class SearchComponent {\r\n\r\n  @Output() onInputEvent: EventEmitter<SearchResult> = new EventEmitter<SearchResult>();\r\n  @Input() searchOptions: SearchOptions;\r\n  private inputValue;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  activeSelector(category: SelectorOption) {\r\n    category.isActive = true;\r\n  }\r\n\r\n  deactivateSelector(category: SelectorOption) {\r\n    category.isActive = false;\r\n  }\r\n\r\n  isActiveSelector(category: SelectorOption): boolean {\r\n    return category.isActive;\r\n  }\r\n\r\n  onInput(value) {\r\n    this.inputValue = value;\r\n    let searchResult: SearchResult = {\r\n      value,\r\n      subSelectors: this.searchOptions.subSelectors.filter(\r\n        selector => selector.isActive\r\n      )\r\n    };\r\n    this.onInputEvent.emit(searchResult);\r\n  }\r\n\r\n  public searchAndMark() {\r\n    this.clearAll();\r\n\r\n    // Получаем активные под-селекторы\r\n    let activeSubSelectors: SelectorOption[] = this.searchOptions.subSelectors.filter(ctg => ctg.isActive);\r\n\r\n    // Если активных под-селекторов нет, то берем все\r\n    let curSelectors: SelectorOption[] =\r\n      activeSubSelectors.length ? activeSubSelectors : this.searchOptions.subSelectors;\r\n\r\n    // Находим элементы с селектором\r\n    let elements = document.querySelectorAll(this.searchOptions.selector);\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      let element = elements.item(i) as HTMLElement;\r\n      this.markBySelectors(this.inputValue, element, curSelectors);\r\n    }\r\n  }\r\n\r\n  private markBySelectors(value, element, selectors) {\r\n    for (let selector of selectors) {\r\n      // Находим дочерний элемент через под-селектор\r\n      let child = element.querySelector(selector.selector) as HTMLElement;\r\n      // Если он есть\r\n      if (child) {\r\n        let startMarkIndex = child.textContent.search(value);\r\n        if (startMarkIndex !== -1) {\r\n          this.mark(child, startMarkIndex, value.length);\r\n          child.classList.add('searcher-mark');\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  private clearAll(): void {\r\n    let elements = document.querySelectorAll(this.searchOptions.selector);\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      let markedElements = elements.item(i).querySelectorAll('.searcher-mark');\r\n\r\n      for (let j = 0; j < markedElements.length; j++) {\r\n        markedElements.item(j).innerHTML = markedElements.item(j).textContent;\r\n        markedElements.item(j).classList.remove('searcher-mark');\r\n      }\r\n    }\r\n  }\r\n\r\n  private mark(element, start: number, end: number): void {\r\n    element.innerHTML =\r\n      element.textContent.substring(0, start) +\r\n      '<mark>' +\r\n      element.textContent.substring(start, start + end) +\r\n      '</mark>' +\r\n      element.textContent.substring(start + end);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {SearchComponent} from './components/search/search.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport {IsotopeContainerComponent} from \"./components/isotope-container/isotope-container.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SearchComponent,\r\n    IsotopeContainerComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [\r\n    SearchComponent,\r\n    IsotopeContainerComponent,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class ProfileSharedModule {\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\nimport {Contact} from '../../../shared/interfaces';\r\nimport {HttpService} from '../../../shared/services';\r\nimport {XmlBuilderService} from './xml-builder.service';\r\nimport {FileManagerService} from './file-manager.service';\r\nimport {SnackbarService} from '../../../shared/services/snackbar.service';\r\n\r\n@Injectable()\r\nexport class ContactsService {\r\n\r\n  private readonly REQUEST_URL = `${environment.serverUrl}/ContactActionServlet`;\r\n  contacts: Contact[];\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private xmlBuilder: XmlBuilderService,\r\n    private fileManager: FileManagerService,\r\n    private snackbarService: SnackbarService,\r\n  ) {\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get(this.REQUEST_URL, {})\r\n      .pipe(\r\n        map(response => this.xmlBuilder.xmlToContacts(response)),\r\n        tap((contacts: Contact[]) => this.contacts = contacts)\r\n      )\r\n  }\r\n\r\n  add(newContact: Contact) {\r\n    const params = {\r\n      action: 'add',\r\n      xml: this.xmlBuilder.contactToXml(newContact)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe((generatedId) => {\r\n        newContact.id = +generatedId;\r\n        this.contacts.push(newContact);\r\n        this.snackbarService.openSnackBar(\"Contact added\");\r\n      });\r\n  }\r\n\r\n  update(contact: Contact) {\r\n    const params = {\r\n      action: 'update',\r\n      xml: this.xmlBuilder.contactToXml(contact)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe(() => {\r\n        let index = this.contacts.findIndex(ct => ct.id === contact.id);\r\n        this.contacts[index] = contact;\r\n        this.snackbarService.openSnackBar(\"Contact edited\");\r\n      });\r\n  }\r\n\r\n  delete(contact: Contact) {\r\n    const params = {\r\n      action: 'delete',\r\n      xml: this.xmlBuilder.contactToXml(contact)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe(() => {\r\n        this.contacts = this.contacts.filter(ct => ct.id !== contact.id);\r\n        this.snackbarService.openSnackBar(\"Contact deleted\");\r\n      });\r\n  }\r\n\r\n  import() {\r\n    this.fileManager.upload();\r\n    let sub = this.fileManager.uploadResult.subscribe(result => {\r\n\r\n      const params = {\r\n        action: 'import',\r\n        xml: result\r\n      };\r\n\r\n      this.http.post(this.REQUEST_URL, params)\r\n        .subscribe(() => {\r\n            this.getAll().subscribe();\r\n            this.snackbarService.openSnackBar(\"Contacts import success\")\r\n          },\r\n          () => this.snackbarService.openSnackBar(\"Contacts import fail\"),\r\n          () => sub.unsubscribe());\r\n    });\r\n  }\r\n\r\n  export(contacts?: Contact[]): void {\r\n    this.fileManager.unload(\r\n      this.xmlBuilder.contactsToXml(\r\n        contacts && contacts.length ? contacts : this.contacts),\r\n      'contacts-export.xml'\r\n    );\r\n  }\r\n\r\n  search(value, categories?: string[]) {\r\n    const params = {\r\n      value: value,\r\n    };\r\n\r\n    if (categories.length) {\r\n      for (let category of categories) {\r\n        params[category] = true;\r\n      }\r\n    }\r\n\r\n    return this.http.get(this.REQUEST_URL, params)\r\n      .pipe(\r\n        map(response => this.xmlBuilder.xmlToContacts(response))\r\n      )\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class DialogOverviewService {\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  openDialog(component, data, changeUrl?): Observable<boolean> {\r\n    let dialog = this.matDialog.open(component, {\r\n      width: '500px',\r\n      data: data\r\n    });\r\n    return dialog.afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FileManagerService {\r\n\r\n  private readonly form;\r\n  private readonly inputElement;\r\n  private readonly linkElement;\r\n\r\n  private reader: FileReader;\r\n\r\n  public uploadResult: Subject<string>;\r\n\r\n  constructor() {\r\n    this.reader = new FileReader();\r\n\r\n    this.form = document.createElement(\"form\");\r\n    this.inputElement = document.createElement('input');\r\n    this.inputElement.setAttribute('type', 'file');\r\n    this.inputElement.setAttribute('hidden', 'hidden');\r\n    this.inputElement.setAttribute('multiple', 'false');\r\n    this.inputElement.setAttribute('accept', 'xml/');\r\n\r\n    this.linkElement = document.createElement('a');\r\n    this.linkElement.style.display = 'none';\r\n\r\n    this.uploadResult = new Subject<string>();\r\n    this.inputElement.onchange = (event: any) => {\r\n      new Promise<string>(resolve => {\r\n        this.reader.onload = () => {\r\n          resolve(this.reader.result as string);\r\n        };\r\n      }).then(r => {\r\n        this.uploadResult.next(r);\r\n        this.form.reset();\r\n      });\r\n      this.reader.readAsText(event.target.files[0]);\r\n    };\r\n\r\n    this.form.appendChild(this.inputElement);\r\n    this.form.appendChild(this.linkElement);\r\n\r\n    document.body.appendChild(this.form);\r\n  }\r\n\r\n  unload(content: string, fileName: string) {\r\n    let file = new File([content], '');\r\n\r\n    this.linkElement.setAttribute('href', URL.createObjectURL(file));\r\n    this.linkElement.setAttribute('download', fileName);\r\n\r\n    this.linkElement.click();\r\n\r\n    URL.revokeObjectURL(this.linkElement.getAttribute('href'));\r\n\r\n    this.linkElement.removeAttribute('href');\r\n    this.linkElement.removeAttribute('download');\r\n  }\r\n\r\n  upload() {\r\n    this.inputElement.click();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {interval, Subject, Subscription} from 'rxjs';\r\n\r\nimport {Task} from '../../../shared/interfaces';\r\nimport {FileManagerService} from './file-manager.service';\r\nimport {HttpService} from '../../../shared/services';\r\nimport {XmlBuilderService} from './xml-builder.service';\r\nimport {SnackbarService} from '../../../shared/services/snackbar.service';\r\nimport {ContactsService} from \"./contacts.service\";\r\n\r\n\r\n@Injectable()\r\nexport class TasksService {\r\n\r\n  private readonly REQUEST_URL = `${environment.serverUrl}/TaskActionServlet`;\r\n\r\n  tasks: Task[];\r\n  check$: Subject<Task[]>;\r\n  private checkSubscription: Subscription;\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private fileManager: FileManagerService,\r\n    private contactsService: ContactsService,\r\n    private xmlBuilder: XmlBuilderService,\r\n    private snackbarService: SnackbarService\r\n  ) {\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get(this.REQUEST_URL, {})\r\n      .pipe(\r\n        map(response => this.xmlBuilder.xmlToTasks(response)),\r\n        tap((tasks: Task[]) => this.tasks = tasks),\r\n      )\r\n  }\r\n\r\n  startChecking() {\r\n    this.check$ = new Subject<Task[]>();\r\n    this.checkSubscription = interval(10000)\r\n      .pipe(\r\n        switchMap(() =>\r\n          this.http.post(this.REQUEST_URL, {action: 'check'})\r\n            .pipe(\r\n              map(response => this.xmlBuilder.xmlToTasks(response))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((tasks: Task[]) => {\r\n        for (let task of tasks) {\r\n          let index = this.tasks.findIndex(tsk => tsk.id === task.id);\r\n          this.tasks[index] = task;\r\n        }\r\n        this.check$.next(tasks);\r\n      });\r\n  }\r\n\r\n  stopChecking() {\r\n    if (this.checkSubscription && this.check$) {\r\n      this.checkSubscription.unsubscribe();\r\n      this.check$.complete();\r\n    }\r\n  }\r\n\r\n  add(newTask: Task) {\r\n    const params = {\r\n      action: 'add',\r\n      xml: this.xmlBuilder.taskToXml(newTask)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe((generatedId) => {\r\n        newTask.id = +generatedId;\r\n        this.tasks.push(newTask);\r\n        this.snackbarService.openSnackBar(\"Task added\");\r\n      });\r\n  }\r\n\r\n  update(task: Task) {\r\n    const params = {\r\n      action: 'update',\r\n      xml: this.xmlBuilder.taskToXml(task)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe(() => {\r\n        let index = this.tasks.findIndex(tsk => tsk.id === task.id);\r\n        this.tasks[index] = task;\r\n        this.snackbarService.openSnackBar(\"Task edited\");\r\n      });\r\n  }\r\n\r\n  delete(task: Task) {\r\n    const params = {\r\n      action: 'delete',\r\n      xml: this.xmlBuilder.taskToXml(task)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe(() => {\r\n        this.tasks = this.tasks.filter(tsk => tsk.id !== task.id);\r\n        this.snackbarService.openSnackBar(\"Task deleted\");\r\n      });\r\n  }\r\n\r\n  search(value, categories?: string[]) {\r\n    const params = {\r\n      value,\r\n    };\r\n\r\n    if (categories.length) {\r\n      for (let category of categories) {\r\n        params[category] = true;\r\n      }\r\n    }\r\n\r\n    return this.http.get(this.REQUEST_URL, params)\r\n      .pipe(\r\n        map(response => this.xmlBuilder.xmlToTasks(response))\r\n      )\r\n  }\r\n\r\n  import() {\r\n    this.fileManager.upload();\r\n    let sub = this.fileManager.uploadResult.subscribe(result => {\r\n\r\n      const params = {\r\n        action: 'import',\r\n        xml: result\r\n      };\r\n\r\n      this.http.post(this.REQUEST_URL, params)\r\n        .subscribe(() => {\r\n            this.contactsService.getAll()\r\n              .subscribe(\r\n                () => this.getAll().subscribe()\r\n              );\r\n            this.snackbarService.openSnackBar(\"Tasks import success\");\r\n          },\r\n          () => this.snackbarService.openSnackBar(\"Tasks import fail\"),\r\n          () => sub.unsubscribe());\r\n    });\r\n  }\r\n\r\n  export(tasks?: Task[]) {\r\n    this.fileManager.unload(\r\n      this.xmlBuilder.tasksToXml(tasks && tasks.length ? tasks : this.tasks),\r\n      'tasks-export.xml'\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import {Contact, Task} from '../../../shared/interfaces';\r\nimport {Injectable} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\n\r\n@Injectable()\r\nexport class XmlBuilderService {\r\n\r\n  constructor(private _datePipe: DatePipe) {\r\n  }\r\n\r\n  tasksToXml(tasks: Task[]): string {\r\n    let tasksElement = document.createElement(\"tasks\");\r\n    for (let task of tasks) {\r\n      tasksElement.appendChild(this.createTaskElement(task));\r\n    }\r\n    return tasksElement.outerHTML;\r\n  }\r\n\r\n  contactsToXml(contacts: Contact[]): string {\r\n    let contactsElement = document.createElement(\"contacts\");\r\n    for (let contact of contacts) {\r\n      contactsElement.appendChild(this.createContactElement(contact));\r\n    }\r\n    return contactsElement.outerHTML;\r\n  }\r\n\r\n  taskToXml(task: Task): string {\r\n    return this.createTaskElement(task).outerHTML;\r\n  }\r\n\r\n  contactToXml(contact: Contact): string {\r\n    return this.createContactElement(contact).outerHTML;\r\n  }\r\n\r\n  xmlToTasks(xml: string | Element): Task[] {\r\n    let root;\r\n\r\n    if (typeof xml === 'string') {\r\n      let parser: DOMParser = new DOMParser();\r\n      root = parser.parseFromString(xml, 'text/xml');\r\n    } else {\r\n      root = xml;\r\n    }\r\n\r\n    let taskElements = root.querySelector('tasks');\r\n    let tasks: Task[] = [];\r\n\r\n    for (let i = 0; i < taskElements.childNodes.length; i++) {\r\n      let taskElement = taskElements.childNodes.item(i) as Element;\r\n\r\n      let id = taskElement.querySelector('id').innerHTML;\r\n      let name = taskElement.querySelector('name').innerHTML;\r\n      let description = taskElement.querySelector('description').innerHTML;\r\n      let completed = taskElement.querySelector('completed').innerHTML;\r\n      let fixed = taskElement.querySelector('fixed').innerHTML;\r\n      console.log(fixed);\r\n\r\n      let notifyDatetime = taskElement.querySelector('notify-timestamp').innerHTML;\r\n\r\n      let contacts: Contact[] = this.xmlToContacts(taskElement, 'task-contacts');\r\n\r\n      tasks.push({\r\n        id: +id,\r\n        name,\r\n        description,\r\n        completed: (completed === \"true\"),\r\n        fixed: (fixed === \"true\"),\r\n        notifyTimestamp: new Date(notifyDatetime),\r\n        contacts\r\n      });\r\n    }\r\n\r\n    return tasks;\r\n  }\r\n\r\n  xmlToContacts(xml: string | Element, tag?): Contact[] {\r\n    let root;\r\n\r\n    if (typeof xml === 'string') {\r\n      let parser: DOMParser = new DOMParser();\r\n      root = parser.parseFromString(xml, 'text/xml');\r\n    } else {\r\n      root = xml;\r\n    }\r\n\r\n    let contacts: Contact[] = [];\r\n    let contactElements = root.querySelector(tag ? tag : 'contacts');\r\n\r\n    for (let i = 0; i < contactElements.childNodes.length; i++) {\r\n      let contactElement = contactElements.childNodes.item(i) as Element;\r\n\r\n      let id = contactElement.querySelector('id').innerHTML;\r\n      let name = contactElement.querySelector('name').innerHTML;\r\n      let phone_number = contactElement.querySelector('phone-number').innerHTML;\r\n      contacts.push({id: +id, name, phone_number});\r\n    }\r\n\r\n    return contacts;\r\n  }\r\n\r\n  private createTaskElement(task: Task): Element {\r\n    let taskElement = document.createElement('task');\r\n\r\n    if (task.id) {\r\n      taskElement.appendChild(this.createElement('id', task.id));\r\n    }\r\n\r\n    taskElement.appendChild(this.createElement('name', task.name));\r\n    taskElement.appendChild(this.createElement('description', task.description));\r\n    taskElement.appendChild(this.createElement('completed', task.completed));\r\n    taskElement.appendChild(this.createElement('fixed', task.fixed));\r\n\r\n    let notifyDatetime: string = this._datePipe.transform(task.notifyTimestamp, \"yyyy-MM-dd HH:mm\");\r\n    taskElement.appendChild(this.createElement('notify-timestamp', notifyDatetime));\r\n\r\n    if (task.contacts) {\r\n      let contacts = document.createElement('task-contacts');\r\n      for (let contact of task.contacts) {\r\n        contacts.appendChild(this.createContactElement(contact));\r\n      }\r\n      taskElement.appendChild(contacts);\r\n    }\r\n\r\n    return taskElement;\r\n  }\r\n\r\n  private createContactElement(contact: Contact): Element {\r\n    let contactElement = document.createElement('contact');\r\n\r\n    if (contact.id) {\r\n      contactElement.appendChild(this.createElement('id', contact.id));\r\n    }\r\n\r\n    contactElement.appendChild(this.createElement('name', contact.name));\r\n    contactElement.appendChild(this.createElement('phone-number', contact.phone_number));\r\n\r\n    return contactElement;\r\n  }\r\n\r\n  private createElement(elementName, content): Element {\r\n    let element = document.createElement(elementName);\r\n    element.innerText = content;\r\n    return element;\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Task} from '../../../shared/interfaces';\r\n\r\n@Pipe({\r\n  name: 'fixedTasks',\r\n  pure: false\r\n})\r\nexport class FixedTasksPipe implements PipeTransform {\r\n\r\n  transform(tasks: Task[], filter: 'fixed' | 'unfixed' | string): Task[] {\r\n    if (!tasks) return [];\r\n    if (tasks && filter === 'fixed') {\r\n      return tasks.filter((task: Task) => task.fixed);\r\n    } else if (tasks && filter === 'unfixed') {\r\n      return tasks.filter((task: Task) => !task.fixed);\r\n    }\r\n  }\r\n}\r\n","<form\r\n    [formGroup]=\"form\"\r\n    (ngSubmit)=\"submitHandler()\"\r\n>\r\n  <input\r\n      mat-dialog-title\r\n      formControlName=\"name\"\r\n      autocomplete=\"false\"\r\n      placeholder=\"Enter a task name...\"\r\n  >\r\n\r\n  <div class=\"columns flex-row hor-flex-center\">\r\n    <div class=\"left-column flex-column ver-space-between\">\r\n      <textarea\r\n          textAreaAutoResize\r\n          formControlName=\"description\"\r\n          placeholder=\"Enter a task description\"\r\n      >\r\n      </textarea>\r\n\r\n      <div class=\"flex-column ver-space-between\">\r\n        <input\r\n            class=\"underline\"\r\n            type=\"date\"\r\n            formControlName=\"date\"\r\n            autocomplete=\"false\"\r\n        >\r\n        <input\r\n            class=\"underline\"\r\n            type=\"time\"\r\n            formControlName=\"time\"\r\n            autocomplete=\"false\"\r\n        >\r\n      </div>\r\n    </div>\r\n    <div class=\"right-column flex-column ver-space-between\">\r\n\r\n      <ul formGroupName=\"contacts\">\r\n        <li *ngFor=\"let contact of contactsService.contacts\">\r\n          <mat-checkbox formControlName=\"{{contact.id}}\">\r\n            {{contact.name}} {{contact.phone_number}}\r\n          </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div mat-dialog-actions class=\"flex-row hor-flex-center\">\r\n    <button\r\n        mat-button\r\n        [disabled]=\"form.invalid\"\r\n    >\r\n      {{submitValue}}\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {ContactsService} from '../../../../shared/services/contacts.service';\r\nimport {TasksService} from '../../../../shared/services/tasks.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Contact, Task} from '../../../../../shared/interfaces';\r\nimport {DatePipe} from '@angular/common';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-task-action',\r\n  templateUrl: './task-action.component.html',\r\n  styleUrls: ['./task-action.component.css']\r\n})\r\nexport class TaskActionComponent implements OnInit {\r\n\r\n  task: Task;\r\n  form: FormGroup;\r\n\r\n  submitValue;\r\n  submitHandler: Function;\r\n\r\n  constructor(\r\n    public contactsService: ContactsService,\r\n    private tasksService: TasksService,\r\n    private _datePipe: DatePipe,\r\n    private router: Router,\r\n    private thisDialog: MatDialogRef<TaskActionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: object\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n\r\n    if (this.data['action'] === 'create') {\r\n      this.setCreateFormValues();\r\n    }\r\n    if (this.data['action'] === 'edit') {\r\n      this.setEditFormValues();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    this.form = new FormGroup({\r\n      'name': new FormControl(null, Validators.required),\r\n      'description': new FormControl(null, Validators.required),\r\n      'date': new FormControl(null, Validators.required),\r\n      'time': new FormControl(null, Validators.required),\r\n      'contacts': new FormGroup({})\r\n    });\r\n\r\n    let contacts: FormGroup = this.form.get('contacts') as FormGroup;\r\n    for (let contact of this.contactsService.contacts) {\r\n      contacts.addControl('' + contact.id, new FormControl(false));\r\n    }\r\n  }\r\n\r\n  private setEditFormValues() {\r\n    this.task = Object.assign({}, this.data['task']);\r\n\r\n    this.form.get('name').setValue(this.task.name);\r\n    this.form.get('description').setValue(this.task.description);\r\n    this.form.get('date').setValue(this._datePipe.transform(this.task.notifyTimestamp, \"yyyy-MM-dd\"));\r\n    this.form.get('time').setValue(this._datePipe.transform(this.task.notifyTimestamp, \"HH:mm\"));\r\n\r\n    let contacts: FormGroup = this.form.get('contacts') as FormGroup;\r\n    for (let contact of this.task.contacts) {\r\n      contacts.get('' + contact.id).setValue(true);\r\n    }\r\n\r\n    this.submitValue = 'Edit';\r\n    this.submitHandler = () => this.edit();\r\n  }\r\n\r\n  private setCreateFormValues() {\r\n    this.submitValue = 'Create';\r\n\r\n    let date = new Date();\r\n    this.form.get('date').setValue(this._datePipe.transform(date, \"yyyy-MM-dd\"));\r\n    this.form.get('time').setValue(this._datePipe.transform(date, \"HH:mm\"));\r\n\r\n    this.submitHandler = () => this.create();\r\n  }\r\n\r\n  edit() {\r\n    this.task.name = this.form.value.name;\r\n    this.task.description = this.form.value.description;\r\n    this.task.notifyTimestamp = new Date(this.form.value.date + ' ' + this.form.value.time);\r\n    this.task.completed = (new Date() > this.task.notifyTimestamp);\r\n    this.task.contacts = this.getCheckedContactsArray();\r\n\r\n    this.tasksService.update(this.task);\r\n    this.thisDialog.close(true);\r\n    this.router.navigate([], {replaceUrl: true});\r\n  }\r\n\r\n  create() {\r\n    this.task = {\r\n      name: this.form.value.name,\r\n      description: this.form.value.description,\r\n      fixed: false,\r\n      notifyTimestamp: new Date(this.form.value.date + ' ' + this.form.value.time),\r\n      contacts: this.getCheckedContactsArray(),\r\n    };\r\n    this.task.completed = (new Date() > this.task.notifyTimestamp);\r\n\r\n    this.tasksService.add(this.task);\r\n    this.thisDialog.close(true);\r\n    this.router.navigate([], {replaceUrl: true});\r\n  }\r\n\r\n  private getCheckedContactsArray(): Contact[] {\r\n    let contacts: Contact[] = [];\r\n    let contactsGroup: FormGroup = this.form.get('contacts') as FormGroup;\r\n\r\n    for (let controlName in contactsGroup.controls) {\r\n      if (contactsGroup.controls[controlName].value) {\r\n        let contact = this.contactsService.contacts.find(\r\n          (ct: Contact) => ct.id === +controlName\r\n        );\r\n        contacts.push(contact);\r\n      }\r\n    }\r\n    return contacts;\r\n  }\r\n}\r\n","<div\r\n    class=\"task-card\"\r\n    [ngClass]=\"{ selected: isSelected }\"\r\n    (click)=\"hideSelect()\"\r\n    id=\"{{task.id}}\"\r\n>\r\n  <div class=\"title name\">\r\n    {{task.name}}\r\n  </div>\r\n  <div class=\"description\">\r\n    {{task.description}}\r\n  </div>\r\n  <div class=\"date-contacts-block\">\r\n    <div class=\"date notify-timestamp flex-row ver-flex-center hor-flex-center\">\r\n      {{task.notifyTimestamp| date : 'short'}}\r\n      <img *ngIf=\"task.completed\" class=\"alarm-clock-completed\">\r\n      <img *ngIf=\"!task.completed\" class=\"alarm-clock\">\r\n    </div>\r\n    <div class=\"contacts\">\r\n      <div\r\n          *ngFor=\"let contact of task.contacts.slice(0, 3);\"\r\n          (click)=\"openContacts()\"\r\n          class=\"contact flex-row ver-flex-center hor-flex-center\"\r\n      >\r\n        {{contact.name[0].toUpperCase()}}\r\n      </div>\r\n      <div\r\n          *ngIf=\"task.contacts.length > 3\"\r\n          class=\"contact flex-row ver-flex-center hor-flex-center\"\r\n          (click)=\"openContacts()\"\r\n      >\r\n        +{{task.contacts.length - 3}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"actions\">\r\n    <img\r\n        class=\"push-pin\"\r\n        [ngClass]=\"{ 'pushed': task.fixed, 'un-pushed': !task.fixed }\"\r\n        (click)=\"Fix()\"\r\n    />\r\n    <img class=\"menu\" [matMenuTriggerFor]=\"menu\"/>\r\n  </div>\r\n  <mat-menu\r\n    #menu=\"matMenu\"\r\n    xPosition=\"before\"\r\n  >\r\n    <button mat-menu-item (click)=\"onEdit()\">Edit</button>\r\n    <button mat-menu-item (click)=\"onCopy()\">Copy</button>\r\n    <button mat-menu-item (click)=\"onDelete()\">Delete</button>\r\n  </mat-menu>\r\n</div>\r\n","import {AfterViewInit, Component, ElementRef, Input} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\n\r\nimport {Task} from '../../../../../shared/interfaces';\r\nimport {TasksService} from '../../../../shared/services/tasks.service';\r\nimport {DialogOverviewService} from \"../../../../shared/services/dialog-overview.service\";\r\nimport {TaskActionComponent} from \"../task-action/task-action.component\";\r\nimport {TaskContactsComponent} from \"../task-contacts/task-contacts.component\";\r\n\r\n@Component({\r\n  selector: 'app-task-card',\r\n  templateUrl: './task-card.component.html',\r\n  styleUrls: ['./task-card.component.css']\r\n})\r\n\r\nexport class TaskCardComponent implements AfterViewInit {\r\n\r\n  @Input() task: Task;\r\n\r\n  isSelected;\r\n\r\n  constructor(\r\n    private tasksService: TasksService,\r\n    private route: ActivatedRoute,\r\n    private dialogOverview: DialogOverviewService,\r\n    private el: ElementRef\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (+params[\"select\"] === this.task.id) {\r\n        this.isSelected = true;\r\n        this.el.nativeElement.scrollIntoView({behavior: 'smooth'});\r\n      }\r\n    })\r\n  }\r\n\r\n  onCopy() {\r\n    let clone: Task = Object.assign({}, this.task);\r\n    clone.id = null;\r\n    this.tasksService.add(clone);\r\n  }\r\n\r\n  onDelete() {\r\n    this.tasksService.delete(this.task);\r\n  }\r\n\r\n  onEdit() {\r\n    this.dialogOverview.openDialog(TaskActionComponent, {\r\n      action: 'edit',\r\n      task: {...this.task}\r\n    });\r\n  }\r\n\r\n  Fix() {\r\n    let clone: Task = Object.assign(this.task);\r\n    clone.fixed = !clone.fixed;\r\n    this.tasksService.update(clone);\r\n  }\r\n\r\n  openContacts() {\r\n    this.dialogOverview.openDialog(TaskContactsComponent, {\r\n      task: {...this.task}\r\n    });\r\n  }\r\n\r\n  hideSelect() {\r\n    this.isSelected = false;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2 mat-dialog-title>\r\n    {{task.name}}\r\n  </h2>\r\n\r\n  <div>\r\n    <span class=\"text\">\r\n      <b>Contacts:</b>\r\n    </span>\r\n    <ul>\r\n      <li *ngFor=\"let contact of task.contacts\">\r\n        <span (click)=\"goto(contact)\">\r\n          <b>{{contact.name}}</b> {{contact.phone_number}}\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from \"@angular/core\";\r\nimport {Contact, Task} from \"../../../../../shared/interfaces\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-task-contacts',\r\n  templateUrl: './task-contacts.component.html',\r\n  styleUrls: ['./task-contacts.component.css']\r\n})\r\nexport class TaskContactsComponent implements OnInit {\r\n  task: Task;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private thisDialog: MatDialogRef<TaskContactsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: object) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.task = this.data[\"task\"];\r\n  }\r\n\r\n  goto(contact: Contact) {\r\n    this.router.navigate(['/profile', 'contacts'], {\r\n      queryParams: {\r\n        select: contact.id\r\n      }\r\n    });\r\n    this.thisDialog.close();\r\n  }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {TaskActionComponent} from \"./components/task-action/task-action.component\";\r\nimport {TaskCardComponent} from \"./components/task-card/task-card.component\";\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport {ProfileSharedModule} from \"../../shared/profile-shared.module\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {TaskContactsComponent} from \"./components/task-contacts/task-contacts.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TaskActionComponent,\r\n    TaskCardComponent,\r\n    TaskContactsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ProfileSharedModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    TaskActionComponent,\r\n    TaskCardComponent,\r\n    TaskContactsComponent,\r\n    ProfileSharedModule,\r\n  ]\r\n})\r\nexport class TasksSharedModule {\r\n\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav mode=\"side\" opened>\r\n    <mat-toolbar>\r\n\r\n      <mat-toolbar-row>\r\n        <button\r\n            mat-raised-button\r\n            (click)=\"onAddTask()\"\r\n        >\r\n          Add Task\r\n        </button>\r\n      </mat-toolbar-row>\r\n\r\n      <mat-toolbar-row>\r\n        <button mat-raised-button (click)=\"onImport()\">\r\n          Import\r\n        </button>\r\n      </mat-toolbar-row>\r\n\r\n      <mat-toolbar-row>\r\n        <button mat-raised-button (click)=\"onExport()\">\r\n          Export\r\n        </button>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n\r\n    <div class=\"search-box\">\r\n      <app-search\r\n          [searchOptions]=\"searchOptions\"\r\n          (onInputEvent)=\"onSearch($event)\"\r\n          #searchComponent\r\n      >\r\n      </app-search>\r\n    </div>\r\n\r\n    <div *ngIf=\"!noSearchedTasks\">\r\n      <app-isotope-container\r\n          selector=\".task\"\r\n          title=\"Searched tasks\"\r\n      >\r\n        <app-task-card\r\n            *ngFor=\"let task of searchedTasks; let last = last\"\r\n            [task]=\"task\"\r\n            class=\"task\"\r\n        >\r\n          {{ last ? searchComponent.searchAndMark() : '' }}\r\n        </app-task-card>\r\n      </app-isotope-container>\r\n    </div>\r\n\r\n    <div *ngIf=\"!searchNow && !searchedTasks.length &&\r\n                (tasksService.tasks | fixedTasks: 'fixed').length\"\r\n    >\r\n      <app-isotope-container\r\n          selector=\".task\"\r\n          title=\"Fixed tasks\"\r\n      >\r\n        <app-task-card\r\n            *ngFor=\"let task of tasksService.tasks | fixedTasks: 'fixed'\"\r\n            [task]=\"task\"\r\n            class=\"task\"\r\n        >\r\n        </app-task-card>\r\n      </app-isotope-container>\r\n    </div>\r\n\r\n    <div *ngIf=\"!searchNow && !searchedTasks.length &&\r\n                (tasksService.tasks | fixedTasks: 'unfixed').length\"\r\n    >\r\n      <app-isotope-container\r\n          selector=\".task\"\r\n          title=\"Other tasks\"\r\n      >\r\n        <app-task-card\r\n            *ngFor=\"let task of tasksService.tasks | fixedTasks: 'unfixed'\"\r\n            [task]=\"task\"\r\n            class=\"task\"\r\n        >\r\n        </app-task-card>\r\n      </app-isotope-container>\r\n    </div>\r\n\r\n    <div\r\n        class=\"flex-row hor-flex-center ver-flex-center\"\r\n    >\r\n      <h2 *ngIf=\"!tasksService.tasks.length\">No tasks</h2>\r\n      <h2 *ngIf=\"searchNow && noSearchedTasks\">No searched tasks</h2>\r\n    </div>\r\n\r\n  </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {TasksService} from '../../shared/services/tasks.service';\r\nimport {Task} from 'src/app/shared/interfaces';\r\nimport {SearchOptions} from \"../../shared/components/search/search.component\";\r\nimport {TaskActionComponent} from \"../shared/components/task-action/task-action.component\";\r\nimport {DialogOverviewService} from \"../../shared/services/dialog-overview.service\";\r\n\r\n@Component({\r\n  selector: 'app-tasks-page',\r\n  templateUrl: './tasks-page.component.html',\r\n  styleUrls: ['./tasks-page.component.css'],\r\n})\r\nexport class TasksPageComponent implements OnInit {\r\n\r\n  searchOptions: SearchOptions;\r\n  searchedTasks: Task[] = [];\r\n  noSearchedTasks: boolean = true;\r\n  searchNow = false;\r\n\r\n  constructor(\r\n    public tasksService: TasksService,\r\n    private dialogOverview: DialogOverviewService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.searchOptions = {\r\n      uniqueAttribute: 'id',\r\n      selector: '.task',\r\n      subSelectors: [\r\n        {name: 'name', selector: '.name', isActive: false},\r\n        {name: 'description', selector: '.description', isActive: false},\r\n        {name: 'time', selector: '.notify-timestamp', isActive: false},\r\n      ]\r\n    };\r\n  }\r\n\r\n  onSearch(event) {\r\n    if (event[\"value\"] === '') {\r\n      this.searchedTasks = [];\r\n      this.noSearchedTasks = true;\r\n      this.searchNow = false;\r\n      return;\r\n    }\r\n    this.tasksService.search(event[\"value\"], event[\"subSelectors\"])\r\n      .subscribe((tasks: Task[]) => {\r\n        this.searchedTasks = tasks;\r\n        this.noSearchedTasks = !this.searchedTasks.length;\r\n        this.searchNow = true;\r\n      });\r\n  }\r\n\r\n  onExport() {\r\n    if (this.searchedTasks.length) {\r\n      this.tasksService.export(this.searchedTasks);\r\n    } else {\r\n      this.tasksService.export();\r\n    }\r\n  }\r\n\r\n  onImport() {\r\n    this.tasksService.import();\r\n  }\r\n\r\n  onAddTask() {\r\n    this.dialogOverview.openDialog(TaskActionComponent, {\r\n      action: 'create',\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {TaskActionComponent} from './shared/components/task-action/task-action.component';\r\nimport {TasksPageComponent} from './tasks-page/tasks-page.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FixedTasksPipe} from \"./pipes/fixed-tasks.pipe\";\r\nimport {TasksSharedModule} from \"./shared/tasks-shared.module\";\r\nimport {TaskContactsComponent} from \"./shared/components/task-contacts/task-contacts.component\";\r\nimport {DialogOverviewService} from \"../shared/services/dialog-overview.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TasksPageComponent,\r\n    FixedTasksPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TasksSharedModule,\r\n\r\n    RouterModule.forChild([\r\n      {path: '', component: TasksPageComponent},\r\n    ]),\r\n  ],\r\n\r\n  entryComponents: [\r\n    TaskActionComponent,\r\n    TaskContactsComponent\r\n  ],\r\n\r\n  providers: [\r\n    DialogOverviewService\r\n  ]\r\n\r\n})\r\nexport class TasksModule {\r\n\r\n}\r\n","import {Directive, ElementRef, HostListener, Renderer2} from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[textAreaAutoResize]\"\r\n})\r\nexport class TextAreaAutoResize {\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.renderer.setStyle(this.element.nativeElement, 'resize', 'none');\r\n  }\r\n\r\n  @HostListener('keyup') onKeyup() {\r\n    this.renderer.setStyle(this.element.nativeElement, 'overflow', 'hidden');\r\n    this.renderer.setStyle(this.element.nativeElement, 'height', '0');\r\n\r\n    let height = +this.element.nativeElement.style.minHeight + +this.element.nativeElement.scrollHeight;\r\n\r\n    this.renderer.setStyle(\r\n      this.element.nativeElement,\r\n      'height',\r\n      height + 'px'\r\n    );\r\n  }\r\n}\r\n"]}