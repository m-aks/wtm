{"version":3,"sources":["webpack:///node_modules/@angular/material/form-field/index.d.ts.MatFormField.html","webpack:///node_modules/@angular/material/tabs/index.d.ts.MatTabGroup.html","webpack:///node_modules/@angular/material/tabs/index.d.ts.MatTabBody.html","webpack:///node_modules/@angular/material/tabs/index.d.ts.MatTabHeader.html","webpack:///node_modules/@angular/material/tabs/index.d.ts.MatTab.html","webpack:///node_modules/@angular/material/tabs/index.d.ts.MatTabNav.html","webpack:///src/app/authorization/authorization.component.html","webpack:///src/app/authorization/authorization.component.ts","webpack:///src/app/authorization/authorization.module.ts","webpack:///src/app/authorization/sign-in/sign-in.component.html","webpack:///src/app/authorization/sign-in/sign-in.component.ts","webpack:///src/app/authorization/sign-up/sign-up.component.html","webpack:///src/app/authorization/sign-up/sign-up.component.ts"],"names":["AuthorizationComponent","AuthorizationModule","SignInComponent","auth","router","snackbarService","submitted","error","form","required","minLength","invalid","user","login","value","password","signIn","subscribe","navigate","reset","openSnackBar","SignUpComponent","username","signUp"],"mappings":"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","file":"authorization-authorization-module-ngfactory-es5.js","sourcesContent":["<div class=\"mat-form-field-wrapper\">\n  <div class=\"mat-form-field-flex\" #connectionContainer\n       (click)=\"_control.onContainerClick && _control.onContainerClick($event)\">\n\n    <!-- Outline used for outline appearance. -->\n    <ng-container *ngIf=\"appearance == 'outline'\">\n      <div class=\"mat-form-field-outline\">\n        <div class=\"mat-form-field-outline-start\"></div>\n        <div class=\"mat-form-field-outline-gap\"></div>\n        <div class=\"mat-form-field-outline-end\"></div>\n      </div>\n      <div class=\"mat-form-field-outline mat-form-field-outline-thick\">\n        <div class=\"mat-form-field-outline-start\"></div>\n        <div class=\"mat-form-field-outline-gap\"></div>\n        <div class=\"mat-form-field-outline-end\"></div>\n      </div>\n    </ng-container>\n\n    <div class=\"mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\">\n      <ng-content select=\"[matPrefix]\"></ng-content>\n    </div>\n\n    <div class=\"mat-form-field-infix\" #inputContainer>\n      <ng-content></ng-content>\n\n      <span class=\"mat-form-field-label-wrapper\">\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\n             read if it comes before the control in the DOM. -->\n        <label class=\"mat-form-field-label\"\n               (cdkObserveContent)=\"updateOutlineGap()\"\n               [cdkObserveContentDisabled]=\"appearance != 'outline'\"\n               [id]=\"_labelId\"\n               [attr.for]=\"_control.id\"\n               [attr.aria-owns]=\"_control.id\"\n               [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat\"\n               [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat\"\n               [class.mat-accent]=\"color == 'accent'\"\n               [class.mat-warn]=\"color == 'warn'\"\n               #label\n               *ngIf=\"_hasFloatingLabel()\"\n               [ngSwitch]=\"_hasLabel()\">\n\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\n          <ng-container *ngSwitchCase=\"false\">\n            <ng-content select=\"mat-placeholder\"></ng-content>\n            <span>{{_control.placeholder}}</span>\n          </ng-container>\n\n          <ng-content select=\"mat-label\" *ngSwitchCase=\"true\"></ng-content>\n\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\n          <span\n            class=\"mat-placeholder-required mat-form-field-required-marker\"\n            aria-hidden=\"true\"\n            *ngIf=\"!hideRequiredMarker && _control.required && !_control.disabled\">&#32;*</span>\n        </label>\n      </span>\n    </div>\n\n    <div class=\"mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\">\n      <ng-content select=\"[matSuffix]\"></ng-content>\n    </div>\n  </div>\n\n  <!-- Underline used for legacy, standard, and box appearances. -->\n  <div class=\"mat-form-field-underline\" #underline\n       *ngIf=\"appearance != 'outline'\">\n    <span class=\"mat-form-field-ripple\"\n          [class.mat-accent]=\"color == 'accent'\"\n          [class.mat-warn]=\"color == 'warn'\"></span>\n  </div>\n\n  <div class=\"mat-form-field-subscript-wrapper\"\n       [ngSwitch]=\"_getDisplayedMessages()\">\n    <div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\">\n      <ng-content select=\"mat-error\"></ng-content>\n    </div>\n\n    <div class=\"mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\"\n      [@transitionMessages]=\"_subscriptAnimationState\">\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\n      <div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div>\n      <ng-content select=\"mat-hint:not([align='end'])\"></ng-content>\n      <div class=\"mat-form-field-hint-spacer\"></div>\n      <ng-content select=\"mat-hint[align='end']\"></ng-content>\n    </div>\n  </div>\n</div>\n","<mat-tab-header #tabHeader\n               [selectedIndex]=\"selectedIndex || 0\"\n               [disableRipple]=\"disableRipple\"\n               [disablePagination]=\"disablePagination\"\n               (indexFocused)=\"_focusChanged($event)\"\n               (selectFocusedIndex)=\"selectedIndex = $event\">\n  <div class=\"mat-tab-label mat-focus-indicator\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\n       *ngFor=\"let tab of _tabs; let i = index\"\n       [id]=\"_getTabLabelId(i)\"\n       [attr.tabIndex]=\"_getTabIndex(tab, i)\"\n       [attr.aria-posinset]=\"i + 1\"\n       [attr.aria-setsize]=\"_tabs.length\"\n       [attr.aria-controls]=\"_getTabContentId(i)\"\n       [attr.aria-selected]=\"selectedIndex == i\"\n       [attr.aria-label]=\"tab.ariaLabel || null\"\n       [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\"\n       [class.mat-tab-label-active]=\"selectedIndex == i\"\n       [disabled]=\"tab.disabled\"\n       [matRippleDisabled]=\"tab.disabled || disableRipple\"\n       (click)=\"_handleClick(tab, tabHeader, i)\">\n\n\n    <div class=\"mat-tab-label-content\">\n      <!-- If there is a label template, use it. -->\n      <ng-template [ngIf]=\"tab.templateLabel\">\n        <ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template>\n      </ng-template>\n\n      <!-- If there is not a label template, fall back to the text label. -->\n      <ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template>\n    </div>\n  </div>\n</mat-tab-header>\n\n<div\n  class=\"mat-tab-body-wrapper\"\n  [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\"\n  #tabBodyWrapper>\n  <mat-tab-body role=\"tabpanel\"\n               *ngFor=\"let tab of _tabs; let i = index\"\n               [id]=\"_getTabContentId(i)\"\n               [attr.aria-labelledby]=\"_getTabLabelId(i)\"\n               [class.mat-tab-body-active]=\"selectedIndex == i\"\n               [content]=\"tab.content!\"\n               [position]=\"tab.position!\"\n               [origin]=\"tab.origin\"\n               [animationDuration]=\"animationDuration\"\n               (_onCentered)=\"_removeTabBodyWrapperHeight()\"\n               (_onCentering)=\"_setTabBodyWrapperHeight($event)\">\n  </mat-tab-body>\n</div>\n","<div class=\"mat-tab-body-content\" #content\n     [@translateTab]=\"{\n        value: _position,\n        params: {animationDuration: animationDuration}\n     }\"\n     (@translateTab.start)=\"_onTranslateTabStarted($event)\"\n     (@translateTab.done)=\"_translateTabComplete.next($event)\">\n  <ng-template matTabBodyHost></ng-template>\n</div>\n","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\"\n     #previousPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\"\n     [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\"\n     (click)=\"_handlePaginatorClick('before')\"\n     (mousedown)=\"_handlePaginatorPress('before', $event)\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"mat-tab-header-pagination-chevron\"></div>\n</div>\n\n<div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\">\n  <div\n    #tabList\n    class=\"mat-tab-list\"\n    [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\"\n    role=\"tablist\"\n    (cdkObserveContent)=\"_onContentChanges()\">\n    <div class=\"mat-tab-labels\">\n      <ng-content></ng-content>\n    </div>\n    <mat-ink-bar></mat-ink-bar>\n  </div>\n</div>\n\n<div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\"\n     #nextPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\"\n     [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\"\n     (mousedown)=\"_handlePaginatorPress('after', $event)\"\n     (click)=\"_handlePaginatorClick('after')\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"mat-tab-header-pagination-chevron\"></div>\n</div>\n","<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    tab-group. -->\n<ng-template><ng-content></ng-content></ng-template>\n","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\"\n     #previousPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\"\n     [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\"\n     (click)=\"_handlePaginatorClick('before')\"\n     (mousedown)=\"_handlePaginatorPress('before', $event)\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"mat-tab-header-pagination-chevron\"></div>\n</div>\n\n<div class=\"mat-tab-link-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\">\n  <div\n    class=\"mat-tab-list\"\n    [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\"\n    #tabList\n    (cdkObserveContent)=\"_onContentChanges()\">\n    <div class=\"mat-tab-links\">\n      <ng-content></ng-content>\n    </div>\n    <mat-ink-bar></mat-ink-bar>\n  </div>\n</div>\n\n<div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\"\n     #nextPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\"\n     [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\"\n     (mousedown)=\"_handlePaginatorPress('after', $event)\"\n     (click)=\"_handlePaginatorClick('after')\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"mat-tab-header-pagination-chevron\"></div>\n</div>\n","<main>\r\n  <div>\r\n    <nav mat-tab-nav-bar backgroundColor=\"primary\" color=\"white\" mat-align-tabs=\"center\">\r\n      <a mat-tab-link\r\n         routerLink=\"sign-in\"\r\n         style=\"height: 60px; font-size: 16px\"\r\n         routerLinkActive #link1=\"routerLinkActive\"\r\n         [active]=\"link1.isActive\"\r\n      >Sign In</a>\r\n      <a mat-tab-link\r\n         routerLink=\"sign-up\"\r\n         routerLinkActive #link2=\"routerLinkActive\"\r\n         [active]=\"link2.isActive\"\r\n         style=\"height: 60px; font-size: 16px\">\r\n        Sign Up\r\n      </a>\r\n    </nav>\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authorization',\r\n  templateUrl: \"./authorization.component.html\",\r\n  styleUrls: ['./authorization.component.css']\r\n})\r\nexport class AuthorizationComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nimport {SignInComponent} from './sign-in/sign-in.component';\r\nimport {SignUpComponent} from './sign-up/sign-up.component';\r\nimport {AuthorizationComponent} from './authorization.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    AuthorizationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    RouterModule.forChild([\r\n      {\r\n        path: '', component: AuthorizationComponent, children: [\r\n          {path: 'sign-in', component: SignInComponent},\r\n          {path: 'sign-up', component: SignUpComponent},\r\n        ]\r\n      }\r\n    ]),\r\n  ],\r\n})\r\nexport class AuthorizationModule {\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <div class=\"title-box\">\r\n    <h2 class=\"title\">Sign In</h2>\r\n    <hr>\r\n  </div>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Login</mat-label>\r\n    <input\r\n      matInput\r\n      name=\"login\"\r\n      formControlName=\"login\"\r\n      autocomplete=\"false\"\r\n    >\r\n    <div *ngIf=\"form.get('login').invalid && form.get('login').touched\">\r\n      <mat-error *ngIf=\"form.get('login').errors.required\">\r\n        Login is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('login').errors.minlength\">\r\n        Min Length of login is {{form.get('login').errors.minlength.requiredLength}}\r\n      </mat-error>\r\n    </div>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Password</mat-label>\r\n    <input matInput name=\"password\" formControlName=\"password\" autocomplete=\"false\">\r\n\r\n    <div *ngIf=\"form.get('password').invalid && form.get('password').touched\">\r\n      <mat-error *ngIf=\"form.get('password').errors.required\">\r\n        Password is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('password').errors.minlength\">\r\n        Min Length of password is {{form.get('password').errors.minlength.requiredLength}}\r\n      </mat-error>\r\n    </div>\r\n  </mat-form-field>\r\n\r\n  <button\r\n    mat-raised-button\r\n    [disabled]=\"form.invalid || submitted\"\r\n  >Sign In</button>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\nimport {AuthService} from '../../shared/services';\r\nimport {Router} from '@angular/router';\r\nimport {User} from '../../shared/interfaces';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\nimport {SnackbarService} from '../../shared/services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\n\r\nexport class SignInComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  submitted = false;\r\n  error = false;\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private snackbarService: SnackbarService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      'login': new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ]),\r\n      'password': new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ])\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.submitted = true;\r\n\r\n    const user: User = {\r\n      login: this.form.value.login,\r\n      password: this.form.value.password,\r\n    };\r\n\r\n    this.auth.signIn(user).subscribe(() => {\r\n      this.submitted = false;\r\n      this.router.navigate(['/profile', 'tasks']);\r\n    }, (error: HttpErrorResponse) => {\r\n      this.form.reset();\r\n      this.submitted = false;\r\n      this.snackbarService.openSnackBar(\"Sign in is fail\");\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <div class=\"title-box\">\r\n    <h2 class=\"title\">Sign Up</h2>\r\n    <hr>\r\n  </div>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Login</mat-label>\r\n    <input\r\n      matInput\r\n      formControlName=\"login\"\r\n      autocomplete=\"false\"\r\n    >\r\n    <div *ngIf=\"form.get('login').invalid && form.get('login').touched\">\r\n      <mat-error *ngIf=\"form.get('login').errors.required\">\r\n        Login is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('login').errors.minlength\">\r\n        Min Length of login is {{form.get('login').errors.minlength.requiredLength}}\r\n      </mat-error>\r\n    </div>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Username</mat-label>\r\n    <input\r\n      matInput\r\n      formControlName=\"username\"\r\n      autocomplete=\"false\"\r\n    >\r\n    <div *ngIf=\"form.get('username').invalid && form.get('username').touched\">\r\n      <mat-error *ngIf=\"form.get('username').errors.required\">\r\n        Username is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('username').errors.minlength\">\r\n        Min Length of username is {{form.get('username').errors.minlength.requiredLength}}\r\n      </mat-error>\r\n    </div>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Password</mat-label>\r\n    <input\r\n      matInput\r\n      formControlName=\"password\"\r\n      autocomplete=\"false\"\r\n    >\r\n    <div *ngIf=\"form.get('password').invalid && form.get('password').touched\">\r\n      <mat-error *ngIf=\"form.get('password').errors.required\">\r\n        Password is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('password').errors.minlength\">\r\n        Min Length of password is {{form.get('password').errors.minlength.requiredLength}}\r\n      </mat-error>\r\n    </div>\r\n  </mat-form-field>\r\n\r\n  <button\r\n    mat-raised-button\r\n    [disabled]=\"form.invalid || submitted\"\r\n  >Sign Up</button>\r\n\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {AuthService} from '../../shared/services';\r\nimport {User} from '../../shared/interfaces';\r\nimport {SnackbarService} from '../../shared/services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  submitted = false;\r\n  error = false;\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private snackbarService: SnackbarService\r\n    ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      'login': new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ]),\r\n      'username': new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ]),\r\n      'password': new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ])\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.submitted = true;\r\n\r\n    const user: User = {\r\n      login: this.form.value.login,\r\n      password: this.form.value.password,\r\n      username: this.form.value.username\r\n    };\r\n\r\n    this.auth.signUp(user).subscribe(() => {\r\n      this.submitted = false;\r\n      this.router.navigate(['/profile', 'tasks']);\r\n    }, () => {\r\n      this.form.reset();\r\n      this.submitted = false;\r\n      this.snackbarService.openSnackBar(\"Sign in is fail\");\r\n    });\r\n  }\r\n}\r\n"]}