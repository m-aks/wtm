{"version":3,"sources":["./node_modules/@angular/material/checkbox/index.d.ts.MatCheckbox.html","./node_modules/@angular/material/chips/index.d.ts.MatChipList.html","./node_modules/@angular/material/icon/index.d.ts.MatIcon.html","./node_modules/@angular/material/menu/index.d.ts._MatMenu.html","./node_modules/@angular/material/menu/index.d.ts.MatMenuItem.html","./node_modules/@angular/material/sidenav/index.d.ts.MatDrawerContent.html","./node_modules/@angular/material/sidenav/index.d.ts.MatDrawer.html","./node_modules/@angular/material/sidenav/index.d.ts.MatDrawerContainer.html","./node_modules/@angular/material/sidenav/index.d.ts.MatSidenavContent.html","./node_modules/@angular/material/sidenav/index.d.ts.MatSidenav.html","./node_modules/@angular/material/sidenav/index.d.ts.MatSidenavContainer.html","./node_modules/@angular/material/slide-toggle/index.d.ts.MatSlideToggle.html","./node_modules/@angular/material/toolbar/index.d.ts.MatToolbar.html","./src/app/profile/notification/notification.component.html","./src/app/profile/notification/notification.component.ts","./src/app/profile/profile.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.module.ts","./src/app/profile/shared/components/isotope-container/isotope-container.component.html","./src/app/profile/shared/components/isotope-container/isotope-container.component.ts","./src/app/profile/shared/components/search/search.component.html","./src/app/profile/shared/components/search/search.component.ts","./src/app/profile/shared/profile-shared.module.ts","./src/app/profile/shared/services/contacts.service.ts","./src/app/profile/shared/services/dialog-overview.service.ts","./src/app/profile/shared/services/file-manager.service.ts","./src/app/profile/shared/services/tasks.service.ts","./src/app/profile/shared/services/xml-builder.service.ts","./src/app/profile/tasks/pipes/fixed-tasks.pipe.ts","./src/app/profile/tasks/shared/components/task-action/task-action.component.html","./src/app/profile/tasks/shared/components/task-action/task-action.component.ts","./src/app/profile/tasks/shared/components/task-card/task-card.component.html","./src/app/profile/tasks/shared/components/task-card/task-card.component.ts","./src/app/profile/tasks/shared/components/task-contacts/task-contacts.component.html","./src/app/profile/tasks/shared/components/task-contacts/task-contacts.component.ts","./src/app/profile/tasks/shared/tasks-shared.module.ts","./src/app/profile/tasks/tasks-page/tasks-page.component.html","./src/app/profile/tasks/tasks-page/tasks-page.component.ts","./src/app/profile/tasks/tasks.module.ts","./src/app/shared/directives/text-area-auto-resize.directive.ts"],"names":[],"mappings":"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","file":"profile-profile-module-ngfactory-es2015.js","sourcesContent":["<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label>\n  <div class=\"mat-checkbox-inner-container\"\n       [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\">\n    <input #input\n           class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [attr.value]=\"value\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [tabIndex]=\"tabIndex\"\n           [attr.aria-label]=\"ariaLabel || null\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-checked]=\"_getAriaChecked()\"\n           (change)=\"_onInteractionEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n    <div matRipple class=\"mat-checkbox-ripple mat-focus-indicator\"\n         [matRippleTrigger]=\"label\"\n         [matRippleDisabled]=\"_isRippleDisabled()\"\n         [matRippleRadius]=\"20\"\n         [matRippleCentered]=\"true\"\n         [matRippleAnimation]=\"{enterDuration: 150}\">\n      <div class=\"mat-ripple-element mat-checkbox-persistent-ripple\"></div>\n    </div>\n    <div class=\"mat-checkbox-frame\"></div>\n    <div class=\"mat-checkbox-background\">\n      <svg version=\"1.1\"\n           focusable=\"false\"\n           class=\"mat-checkbox-checkmark\"\n           viewBox=\"0 0 24 24\"\n           xml:space=\"preserve\">\n        <path class=\"mat-checkbox-checkmark-path\"\n              fill=\"none\"\n              stroke=\"white\"\n              d=\"M4.1,12.7 9,17.6 20.3,6.3\"/>\n      </svg>\n      <!-- Element for rendering the indeterminate state checkbox. -->\n      <div class=\"mat-checkbox-mixedmark\"></div>\n    </div>\n  </div>\n  <span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n","<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>","<ng-content></ng-content>","<ng-template>\n  <div\n    class=\"mat-menu-panel\"\n    [id]=\"panelId\"\n    [ngClass]=\"_classList\"\n    (keydown)=\"_handleKeydown($event)\"\n    (click)=\"closed.emit('click')\"\n    [@transformMenu]=\"_panelAnimationState\"\n    (@transformMenu.start)=\"_onAnimationStart($event)\"\n    (@transformMenu.done)=\"_onAnimationDone($event)\"\n    tabindex=\"-1\"\n    role=\"menu\"\n    [attr.aria-label]=\"ariaLabel || null\"\n    [attr.aria-labelledby]=\"ariaLabelledby || null\"\n    [attr.aria-describedby]=\"ariaDescribedby || null\">\n    <div class=\"mat-menu-content\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</ng-template>\n","<ng-content></ng-content>\n<div class=\"mat-menu-ripple\" matRipple\n     [matRippleDisabled]=\"disableRipple || disabled\"\n     [matRippleTrigger]=\"_getHostElement()\">\n</div>\n","<ng-content></ng-content>","<div class=\"mat-drawer-inner-container\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","<div class=\"mat-drawer-backdrop\" (click)=\"_onBackdropClicked()\" *ngIf=\"hasBackdrop\"\n     [class.mat-drawer-shown]=\"_isShowingBackdrop()\"></div>\n\n<ng-content select=\"mat-drawer\"></ng-content>\n\n<ng-content select=\"mat-drawer-content\">\n</ng-content>\n<mat-drawer-content *ngIf=\"!_content\">\n  <ng-content></ng-content>\n</mat-drawer-content>\n","<ng-content></ng-content>","<div class=\"mat-drawer-inner-container\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","<div class=\"mat-drawer-backdrop\" (click)=\"_onBackdropClicked()\" *ngIf=\"hasBackdrop\"\n     [class.mat-drawer-shown]=\"_isShowingBackdrop()\"></div>\n\n<ng-content select=\"mat-sidenav\"></ng-content>\n\n<ng-content select=\"mat-sidenav-content\">\n</ng-content>\n<mat-sidenav-content *ngIf=\"!_content\" cdkScrollable>\n  <ng-content></ng-content>\n</mat-sidenav-content>\n","<label [attr.for]=\"inputId\" class=\"mat-slide-toggle-label\" #label>\n  <div #toggleBar class=\"mat-slide-toggle-bar\"\n       [class.mat-slide-toggle-bar-no-side-margin]=\"!labelContent.textContent || !labelContent.textContent.trim()\">\n\n    <input #input class=\"mat-slide-toggle-input cdk-visually-hidden\" type=\"checkbox\"\n           role=\"switch\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [tabIndex]=\"tabIndex\"\n           [checked]=\"checked\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [attr.aria-checked]=\"checked.toString()\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           (change)=\"_onChangeEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n\n    <div class=\"mat-slide-toggle-thumb-container\" #thumbContainer>\n      <div class=\"mat-slide-toggle-thumb\"></div>\n      <div class=\"mat-slide-toggle-ripple mat-focus-indicator\" mat-ripple\n           [matRippleTrigger]=\"label\"\n           [matRippleDisabled]=\"disableRipple || disabled\"\n           [matRippleCentered]=\"true\"\n           [matRippleRadius]=\"20\"\n           [matRippleAnimation]=\"{enterDuration: 150}\">\n\n        <div class=\"mat-ripple-element mat-slide-toggle-persistent-ripple\"></div>\n      </div>\n    </div>\n\n  </div>\n\n  <span class=\"mat-slide-toggle-content\" #labelContent (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n","<ng-content></ng-content>\n<ng-content select=\"mat-toolbar-row\"></ng-content>\n","<div class=\"notifications flex-column ver-end\">\r\n  <div\r\n      class=\"notification flex-row ver-flex-center hor-space-between\"\r\n      *ngFor=\"let notification of taskNotifications\"\r\n  >\r\n    <span>\r\n      <b>{{notification.name}}</b>\r\n      {{notification.notifyTimestamp| date: 'short'}}\r\n    </span>\r\n    <div class=\"flex-row ver-flex-center hor-space-between\">\r\n      <button class=\"go-to-button flex-row ver-flex-center hor-flex-center\" (click)=\"onGoto(notification)\">Go to task</button>\r\n      <button class=\"close-button flex-row ver-flex-center hor-flex-center\" (click)=\"onHide(notification)\">X</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnDestroy} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {Task} from '../../shared/interfaces';\r\nimport {TasksService} from '../shared/services/tasks.service';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnDestroy {\r\n\r\n  @Input() private enable: boolean = false;\r\n  private subscription: Subscription;\r\n  taskNotifications: Task[] = [];\r\n\r\n  constructor(\r\n    public tasksService: TasksService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public toggleEnableNotifications() {\r\n    this.enable = !this.enable;\r\n\r\n    if (this.enable) {\r\n      this.subscription = this.tasksService.check$\r\n        .subscribe((tasks: Task[]) => {\r\n          console.log('Notification tick');\r\n          if (tasks.length) {\r\n            for (let task of tasks) {\r\n              this.taskNotifications.push(task);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (!this.enable) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onGoto(notification: Task) {\r\n    this.router.navigate(['/profile', 'tasks'], {\r\n      queryParams: {\r\n        select: notification.id\r\n      }\r\n    });\r\n    this.onHide(notification);\r\n  }\r\n\r\n  onHide(notification: Task) {\r\n    this.taskNotifications = this.taskNotifications.filter(task => task.id !== notification.id);\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"nav-bar\" role=\"heading\">\r\n\r\n  <div class=\"left\">\r\n    <span class=\"title\">\r\n      Web Task Manager\r\n    </span>\r\n\r\n    <nav>\r\n      <a\r\n          mat-button\r\n          routerLinkActive=\"active-link\"\r\n          [routerLink]=\"['/profile', 'tasks']\"\r\n      >Tasks</a>\r\n      <a\r\n          mat-button\r\n          routerLinkActive=\"active-link\"\r\n          [routerLink]=\"['/profile', 'contacts']\"\r\n      >Contacts</a>\r\n      <a\r\n          mat-button\r\n          routerLinkActive=\"active-link\"\r\n          [routerLink]=\"['/profile', 'remainders']\"\r\n      >Remainders</a>\r\n    </nav>\r\n  </div>\r\n\r\n  <div class=\"right\">\r\n    <mat-slide-toggle\r\n        (change)=\"notificationComponent.toggleEnableNotifications()\"\r\n    >\r\n      <span>Notifications</span>\r\n    </mat-slide-toggle>\r\n\r\n    <button\r\n        mat-button\r\n        [matMenuTriggerFor]=\"menu\"\r\n    >\r\n      <mat-icon>person</mat-icon>\r\n      {{auth.userLogin}}\r\n    </button>\r\n\r\n    <mat-menu\r\n      #menu=\"matMenu\"\r\n      xPosition=\"before\"\r\n    >\r\n      <button mat-menu-item (click)=\"onSignOut()\">Sign Out</button>\r\n    </mat-menu>\r\n  </div>\r\n\r\n</mat-toolbar>\r\n\r\n<router-outlet *ngIf=\"tasksLoaded && contactsLoaded; else elseBlock\"></router-outlet>\r\n\r\n<ng-template #elseBlock>Please wait...</ng-template>\r\n\r\n<app-notification #notificationComponent></app-notification>\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\n\r\nimport {AuthService} from '../shared/services';\r\nimport {NotificationComponent} from './notification/notification.component';\r\nimport {TasksService} from \"./shared/services/tasks.service\";\r\nimport {ContactsService} from \"./shared/services/contacts.service\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n\r\n  contactsLoaded: boolean;\r\n  tasksLoaded: boolean;\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    public tasksService: TasksService,\r\n    public contactsService: ContactsService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contactsService.getAll().subscribe(\r\n      () => {\r\n        this.contactsLoaded = true;\r\n        this.tasksService.getAll().subscribe(\r\n          () => this.tasksLoaded = true\r\n        );\r\n      }\r\n    );\r\n\r\n    this.tasksService.startChecking();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tasksService.stopChecking();\r\n  }\r\n\r\n  onSignOut() {\r\n    this.tasksService.stopChecking();\r\n    this.auth.signOut();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule, DatePipe} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nimport {ProfileComponent} from './profile.component';\r\nimport {NotificationComponent} from './notification/notification.component';\r\nimport {ContactsService} from './shared/services/contacts.service';\r\nimport {TasksService} from './shared/services/tasks.service';\r\nimport {ProfileSharedModule} from './shared/profile-shared.module';\r\nimport {FileManagerService} from './shared/services/file-manager.service';\r\nimport {XmlBuilderService} from './shared/services/xml-builder.service';\r\nimport {SnackbarService} from '../shared/services/snackbar.service';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {TasksModule} from \"./tasks/tasks.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent,\r\n    NotificationComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileSharedModule,\r\n    SharedModule,\r\n\r\n    RouterModule.forChild([\r\n      {\r\n        path: '', component: ProfileComponent, children: [\r\n          {path: '', redirectTo: '/profile/tasks', pathMatch: 'full'},\r\n          {path: 'tasks', loadChildren: () => import('./tasks/tasks.module').then(m => m.TasksModule)},\r\n          {\r\n            path: 'remainders',\r\n            loadChildren: () => import('./remainders/remainders.module').then(m => m.RemaindersModule)\r\n          },\r\n          {path: 'contacts', loadChildren: () => import('./contacts/contacts.module').then(m => m.ContactsModule)}\r\n        ]\r\n      }\r\n    ]),\r\n    TasksModule,\r\n  ],\r\n  providers: [\r\n    ContactsService,\r\n    TasksService,\r\n\r\n    FileManagerService,\r\n    SnackbarService,\r\n\r\n    XmlBuilderService,\r\n\r\n    DatePipe,\r\n  ]\r\n})\r\n\r\n// SearchService,\r\n\r\nexport class ProfileModule {\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <h2 class=\"title\" *ngIf=\"title\">{{title}}</h2>\r\n  <div #container class='isotope-container'>\r\n    <ng-content>\r\n\r\n    </ng-content>\r\n  </div>\r\n</div>\r\n","import {AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild} from \"@angular/core\";\r\n\r\ndeclare let Isotope: any;\r\n\r\n@Component({\r\n  selector: \"app-isotope-container\",\r\n  templateUrl: \"./isotope-container.component.html\",\r\n  styleUrls: [\"./isotope-container.component.css\"]\r\n})\r\nexport class IsotopeContainerComponent implements AfterViewInit, OnDestroy {\r\n\r\n  @Input() selector: string;\r\n  @Input() title: string;\r\n  @ViewChild(\"container\") container: ElementRef;\r\n\r\n  private isotope;\r\n  private mutationsObserver: MutationObserver;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.container) {\r\n      this.isotope = new Isotope(this.container.nativeElement, {\r\n        itemSelector: this.selector,\r\n        layoutMode: 'masonry',\r\n      });\r\n\r\n      this.mutationsObserver = new MutationObserver((mutations: MutationRecord[]) => {\r\n        console.log(mutations);\r\n        for (let mutation of mutations) {\r\n\r\n          if (mutation.addedNodes.length) {\r\n            for (let i = 0; i < mutation.addedNodes.length; i++) {\r\n              this.isotope.prepended(mutation.addedNodes.item(i));\r\n            }\r\n          }\r\n\r\n          if (mutation.removedNodes.length) {\r\n            for (let i = 0; i < mutation.removedNodes.length; i++) {\r\n              this.isotope.remove(mutation.removedNodes.item(i));\r\n            }\r\n          }\r\n\r\n          this.isotope.layout();\r\n        }\r\n      });\r\n\r\n      this.mutationsObserver.observe(this.container.nativeElement, {\r\n        childList: true,\r\n        attributeFilter: ['class']\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.mutationsObserver) {\r\n      this.isotope.destroy();\r\n      this.mutationsObserver.disconnect();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"search-box\">\r\n  <button\r\n      class=\"filters-button\"\r\n      [matMenuTriggerFor]=\"menu\"\r\n  >\r\n    Filters\r\n  </button>\r\n\r\n  <mat-menu\r\n    #menu=\"matMenu\"\r\n    xPosition=\"before\"\r\n  >\r\n    <button\r\n        mat-menu-item\r\n        *ngFor=\"let selector of searchOptions.subSelectors\"\r\n        (click)=\"activeSelector(selector)\"\r\n    >\r\n      <b *ngIf=\"isActiveSelector(selector)\">{{selector.name}}</b>\r\n      <span *ngIf=\"!isActiveSelector(selector)\">{{selector.name}}</span>\r\n      <img *ngIf=\"isActiveSelector(selector)\" class=\"active-selector\"/>\r\n    </button>\r\n  </mat-menu>\r\n\r\n  <input #searchInput\r\n         type=\"text\"\r\n         class=\"input\"\r\n         placeholder=\"Search\"\r\n         (input)=\"onInput(searchInput.value)\">\r\n\r\n  <div class=\"active-selectors\">\r\n    <mat-chip-list>\r\n      <div *ngFor=\"let selector of searchOptions.subSelectors\">\r\n        <mat-chip *ngIf=\"selector.isActive\">\r\n        <span>{{selector.name}}\r\n          <span\r\n              class=\"deactivate-selector\"\r\n              (click)=\"deactivateSelector(selector)\"\r\n          >X\r\n          </span>\r\n        </span>\r\n        </mat-chip>\r\n      </div>\r\n    </mat-chip-list>\r\n  </div>\r\n</div>\r\n","import {Component, EventEmitter, Input, Output} from \"@angular/core\";\r\n\r\nexport interface SearchResult {\r\n  value: string,\r\n  subSelectors: SelectorOption[];\r\n}\r\n\r\nexport interface SelectorOption {\r\n  name: string,\r\n  selector: string,\r\n  isActive: boolean\r\n}\r\n\r\nexport interface SearchOptions {\r\n  selector: string;\r\n  subSelectors: SelectorOption[];\r\n  uniqueAttribute: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: \"./search.component.html\",\r\n  styleUrls: [\"./search.component.css\"],\r\n})\r\nexport class SearchComponent {\r\n\r\n  @Output() onInputEvent: EventEmitter<SearchResult> = new EventEmitter<SearchResult>();\r\n  @Input() searchOptions: SearchOptions;\r\n  private inputValue;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  activeSelector(category: SelectorOption) {\r\n    category.isActive = true;\r\n  }\r\n\r\n  deactivateSelector(category: SelectorOption) {\r\n    category.isActive = false;\r\n  }\r\n\r\n  isActiveSelector(category: SelectorOption): boolean {\r\n    return category.isActive;\r\n  }\r\n\r\n  onInput(value) {\r\n    this.inputValue = value;\r\n    let searchResult: SearchResult = {\r\n      value,\r\n      subSelectors: this.searchOptions.subSelectors.filter(\r\n        selector => selector.isActive\r\n      )\r\n    };\r\n    this.onInputEvent.emit(searchResult);\r\n  }\r\n\r\n  public searchAndMark() {\r\n    this.clearAll();\r\n\r\n    // Получаем активные под-селекторы\r\n    let activeSubSelectors: SelectorOption[] = this.searchOptions.subSelectors.filter(ctg => ctg.isActive);\r\n\r\n    // Если активных под-селекторов нет, то берем все\r\n    let curSelectors: SelectorOption[] =\r\n      activeSubSelectors.length ? activeSubSelectors : this.searchOptions.subSelectors;\r\n\r\n    // Находим элементы с селектором\r\n    let elements = document.querySelectorAll(this.searchOptions.selector);\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      let element = elements.item(i) as HTMLElement;\r\n      this.markBySelectors(this.inputValue, element, curSelectors);\r\n    }\r\n  }\r\n\r\n  private markBySelectors(value, element, selectors) {\r\n    for (let selector of selectors) {\r\n      // Находим дочерний элемент через под-селектор\r\n      let child = element.querySelector(selector.selector) as HTMLElement;\r\n      // Если он есть\r\n      if (child) {\r\n        let startMarkIndex = child.textContent.search(value);\r\n        if (startMarkIndex !== -1) {\r\n          this.mark(child, startMarkIndex, value.length);\r\n          child.classList.add('searcher-mark');\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  private clearAll(): void {\r\n    let elements = document.querySelectorAll(this.searchOptions.selector);\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      let markedElements = elements.item(i).querySelectorAll('.searcher-mark');\r\n\r\n      for (let j = 0; j < markedElements.length; j++) {\r\n        markedElements.item(j).innerHTML = markedElements.item(j).textContent;\r\n        markedElements.item(j).classList.remove('searcher-mark');\r\n      }\r\n    }\r\n  }\r\n\r\n  private mark(element, start: number, end: number): void {\r\n    element.innerHTML =\r\n      element.textContent.substring(0, start) +\r\n      '<mark>' +\r\n      element.textContent.substring(start, start + end) +\r\n      '</mark>' +\r\n      element.textContent.substring(start + end);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {SearchComponent} from './components/search/search.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport {IsotopeContainerComponent} from \"./components/isotope-container/isotope-container.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SearchComponent,\r\n    IsotopeContainerComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [\r\n    SearchComponent,\r\n    IsotopeContainerComponent,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class ProfileSharedModule {\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\nimport {Contact} from '../../../shared/interfaces';\r\nimport {HttpService} from '../../../shared/services';\r\nimport {XmlBuilderService} from './xml-builder.service';\r\nimport {FileManagerService} from './file-manager.service';\r\nimport {SnackbarService} from '../../../shared/services/snackbar.service';\r\n\r\n@Injectable()\r\nexport class ContactsService {\r\n\r\n  private readonly REQUEST_URL = `${environment.serverUrl}/ContactActionServlet`;\r\n  contacts: Contact[];\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private xmlBuilder: XmlBuilderService,\r\n    private fileManager: FileManagerService,\r\n    private snackbarService: SnackbarService,\r\n  ) {\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get(this.REQUEST_URL, {})\r\n      .pipe(\r\n        map(response => this.xmlBuilder.xmlToContacts(response)),\r\n        tap((contacts: Contact[]) => this.contacts = contacts)\r\n      )\r\n  }\r\n\r\n  add(newContact: Contact) {\r\n    const params = {\r\n      action: 'add',\r\n      xml: this.xmlBuilder.contactToXml(newContact)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe((generatedId) => {\r\n        newContact.id = +generatedId;\r\n        this.contacts.push(newContact);\r\n        this.snackbarService.openSnackBar(\"Contact added\");\r\n      });\r\n  }\r\n\r\n  update(contact: Contact) {\r\n    const params = {\r\n      action: 'update',\r\n      xml: this.xmlBuilder.contactToXml(contact)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe(() => {\r\n        let index = this.contacts.findIndex(ct => ct.id === contact.id);\r\n        this.contacts[index] = contact;\r\n        this.snackbarService.openSnackBar(\"Contact edited\");\r\n      });\r\n  }\r\n\r\n  delete(contact: Contact) {\r\n    const params = {\r\n      action: 'delete',\r\n      xml: this.xmlBuilder.contactToXml(contact)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe(() => {\r\n        this.contacts = this.contacts.filter(ct => ct.id !== contact.id);\r\n        this.snackbarService.openSnackBar(\"Contact deleted\");\r\n      });\r\n  }\r\n\r\n  import() {\r\n    this.fileManager.upload();\r\n    let sub = this.fileManager.uploadResult.subscribe(result => {\r\n\r\n      const params = {\r\n        action: 'import',\r\n        xml: result\r\n      };\r\n\r\n      this.http.post(this.REQUEST_URL, params)\r\n        .subscribe(() => {\r\n            this.getAll().subscribe();\r\n            this.snackbarService.openSnackBar(\"Contacts import success\")\r\n          },\r\n          () => this.snackbarService.openSnackBar(\"Contacts import fail\"),\r\n          () => sub.unsubscribe());\r\n    });\r\n  }\r\n\r\n  export(contacts?: Contact[]): void {\r\n    this.fileManager.unload(\r\n      this.xmlBuilder.contactsToXml(\r\n        contacts && contacts.length ? contacts : this.contacts),\r\n      'contacts-export.xml'\r\n    );\r\n  }\r\n\r\n  search(value, categories?: string[]) {\r\n    const params = {\r\n      value: value,\r\n    };\r\n\r\n    if (categories.length) {\r\n      for (let category of categories) {\r\n        params[category] = true;\r\n      }\r\n    }\r\n\r\n    return this.http.get(this.REQUEST_URL, params)\r\n      .pipe(\r\n        map(response => this.xmlBuilder.xmlToContacts(response))\r\n      )\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class DialogOverviewService {\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  openDialog(component, data, changeUrl?): Observable<boolean> {\r\n    let dialog = this.matDialog.open(component, {\r\n      width: '500px',\r\n      data: data\r\n    });\r\n    return dialog.afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FileManagerService {\r\n\r\n  private readonly form;\r\n  private readonly inputElement;\r\n  private readonly linkElement;\r\n\r\n  private reader: FileReader;\r\n\r\n  public uploadResult: Subject<string>;\r\n\r\n  constructor() {\r\n    this.reader = new FileReader();\r\n\r\n    this.form = document.createElement(\"form\");\r\n    this.inputElement = document.createElement('input');\r\n    this.inputElement.setAttribute('type', 'file');\r\n    this.inputElement.setAttribute('hidden', 'hidden');\r\n    this.inputElement.setAttribute('multiple', 'false');\r\n    this.inputElement.setAttribute('accept', 'xml/');\r\n\r\n    this.linkElement = document.createElement('a');\r\n    this.linkElement.style.display = 'none';\r\n\r\n    this.uploadResult = new Subject<string>();\r\n    this.inputElement.onchange = (event: any) => {\r\n      new Promise<string>(resolve => {\r\n        this.reader.onload = () => {\r\n          resolve(this.reader.result as string);\r\n        };\r\n      }).then(r => {\r\n        this.uploadResult.next(r);\r\n        this.form.reset();\r\n      });\r\n      this.reader.readAsText(event.target.files[0]);\r\n    };\r\n\r\n    this.form.appendChild(this.inputElement);\r\n    this.form.appendChild(this.linkElement);\r\n\r\n    document.body.appendChild(this.form);\r\n  }\r\n\r\n  unload(content: string, fileName: string) {\r\n    let file = new File([content], '');\r\n\r\n    this.linkElement.setAttribute('href', URL.createObjectURL(file));\r\n    this.linkElement.setAttribute('download', fileName);\r\n\r\n    this.linkElement.click();\r\n\r\n    URL.revokeObjectURL(this.linkElement.getAttribute('href'));\r\n\r\n    this.linkElement.removeAttribute('href');\r\n    this.linkElement.removeAttribute('download');\r\n  }\r\n\r\n  upload() {\r\n    this.inputElement.click();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {interval, Subject, Subscription} from 'rxjs';\r\n\r\nimport {Task} from '../../../shared/interfaces';\r\nimport {FileManagerService} from './file-manager.service';\r\nimport {HttpService} from '../../../shared/services';\r\nimport {XmlBuilderService} from './xml-builder.service';\r\nimport {SnackbarService} from '../../../shared/services/snackbar.service';\r\nimport {ContactsService} from \"./contacts.service\";\r\n\r\n\r\n@Injectable()\r\nexport class TasksService {\r\n\r\n  private readonly REQUEST_URL = `${environment.serverUrl}/TaskActionServlet`;\r\n\r\n  tasks: Task[];\r\n  check$: Subject<Task[]>;\r\n  private checkSubscription: Subscription;\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private fileManager: FileManagerService,\r\n    private contactsService: ContactsService,\r\n    private xmlBuilder: XmlBuilderService,\r\n    private snackbarService: SnackbarService\r\n  ) {\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get(this.REQUEST_URL, {})\r\n      .pipe(\r\n        map(response => this.xmlBuilder.xmlToTasks(response)),\r\n        tap((tasks: Task[]) => this.tasks = tasks),\r\n      )\r\n  }\r\n\r\n  startChecking() {\r\n    this.check$ = new Subject<Task[]>();\r\n    this.checkSubscription = interval(10000)\r\n      .pipe(\r\n        switchMap(() =>\r\n          this.http.post(this.REQUEST_URL, {action: 'check'})\r\n            .pipe(\r\n              map(response => this.xmlBuilder.xmlToTasks(response))\r\n            )\r\n        )\r\n      )\r\n      .subscribe((tasks: Task[]) => {\r\n        for (let task of tasks) {\r\n          let index = this.tasks.findIndex(tsk => tsk.id === task.id);\r\n          this.tasks[index] = task;\r\n        }\r\n        this.check$.next(tasks);\r\n      });\r\n  }\r\n\r\n  stopChecking() {\r\n    if (this.checkSubscription && this.check$) {\r\n      this.checkSubscription.unsubscribe();\r\n      this.check$.complete();\r\n    }\r\n  }\r\n\r\n  add(newTask: Task) {\r\n    const params = {\r\n      action: 'add',\r\n      xml: this.xmlBuilder.taskToXml(newTask)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe((generatedId) => {\r\n        newTask.id = +generatedId;\r\n        this.tasks.push(newTask);\r\n        this.snackbarService.openSnackBar(\"Task added\");\r\n      });\r\n  }\r\n\r\n  update(task: Task) {\r\n    const params = {\r\n      action: 'update',\r\n      xml: this.xmlBuilder.taskToXml(task)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe(() => {\r\n        let index = this.tasks.findIndex(tsk => tsk.id === task.id);\r\n        this.tasks[index] = task;\r\n        this.snackbarService.openSnackBar(\"Task edited\");\r\n      });\r\n  }\r\n\r\n  delete(task: Task) {\r\n    const params = {\r\n      action: 'delete',\r\n      xml: this.xmlBuilder.taskToXml(task)\r\n    };\r\n    this.http.post(this.REQUEST_URL, params)\r\n      .subscribe(() => {\r\n        this.tasks = this.tasks.filter(tsk => tsk.id !== task.id);\r\n        this.snackbarService.openSnackBar(\"Task deleted\");\r\n      });\r\n  }\r\n\r\n  search(value, categories?: string[]) {\r\n    const params = {\r\n      value,\r\n    };\r\n\r\n    if (categories.length) {\r\n      for (let category of categories) {\r\n        params[category] = true;\r\n      }\r\n    }\r\n\r\n    return this.http.get(this.REQUEST_URL, params)\r\n      .pipe(\r\n        map(response => this.xmlBuilder.xmlToTasks(response))\r\n      )\r\n  }\r\n\r\n  import() {\r\n    this.fileManager.upload();\r\n    let sub = this.fileManager.uploadResult.subscribe(result => {\r\n\r\n      const params = {\r\n        action: 'import',\r\n        xml: result\r\n      };\r\n\r\n      this.http.post(this.REQUEST_URL, params)\r\n        .subscribe(() => {\r\n            this.contactsService.getAll()\r\n              .subscribe(\r\n                () => this.getAll().subscribe()\r\n              );\r\n            this.snackbarService.openSnackBar(\"Tasks import success\");\r\n          },\r\n          () => this.snackbarService.openSnackBar(\"Tasks import fail\"),\r\n          () => sub.unsubscribe());\r\n    });\r\n  }\r\n\r\n  export(tasks?: Task[]) {\r\n    this.fileManager.unload(\r\n      this.xmlBuilder.tasksToXml(tasks && tasks.length ? tasks : this.tasks),\r\n      'tasks-export.xml'\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import {Contact, Task} from '../../../shared/interfaces';\r\nimport {Injectable} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\n\r\n@Injectable()\r\nexport class XmlBuilderService {\r\n\r\n  constructor(private _datePipe: DatePipe) {\r\n  }\r\n\r\n  tasksToXml(tasks: Task[]): string {\r\n    let tasksElement = document.createElement(\"tasks\");\r\n    for (let task of tasks) {\r\n      tasksElement.appendChild(this.createTaskElement(task));\r\n    }\r\n    return tasksElement.outerHTML;\r\n  }\r\n\r\n  contactsToXml(contacts: Contact[]): string {\r\n    let contactsElement = document.createElement(\"contacts\");\r\n    for (let contact of contacts) {\r\n      contactsElement.appendChild(this.createContactElement(contact));\r\n    }\r\n    return contactsElement.outerHTML;\r\n  }\r\n\r\n  taskToXml(task: Task): string {\r\n    return this.createTaskElement(task).outerHTML;\r\n  }\r\n\r\n  contactToXml(contact: Contact): string {\r\n    return this.createContactElement(contact).outerHTML;\r\n  }\r\n\r\n  xmlToTasks(xml: string | Element): Task[] {\r\n    let root;\r\n\r\n    if (typeof xml === 'string') {\r\n      let parser: DOMParser = new DOMParser();\r\n      root = parser.parseFromString(xml, 'text/xml');\r\n    } else {\r\n      root = xml;\r\n    }\r\n\r\n    let taskElements = root.querySelector('tasks');\r\n    let tasks: Task[] = [];\r\n\r\n    for (let i = 0; i < taskElements.childNodes.length; i++) {\r\n      let taskElement = taskElements.childNodes.item(i) as Element;\r\n\r\n      let id = taskElement.querySelector('id').innerHTML;\r\n      let name = taskElement.querySelector('name').innerHTML;\r\n      let description = taskElement.querySelector('description').innerHTML;\r\n      let completed = taskElement.querySelector('completed').innerHTML;\r\n      let fixed = taskElement.querySelector('fixed').innerHTML;\r\n      console.log(fixed);\r\n\r\n      let notifyDatetime = taskElement.querySelector('notify-timestamp').innerHTML;\r\n\r\n      let contacts: Contact[] = this.xmlToContacts(taskElement, 'task-contacts');\r\n\r\n      tasks.push({\r\n        id: +id,\r\n        name,\r\n        description,\r\n        completed: (completed === \"true\"),\r\n        fixed: (fixed === \"true\"),\r\n        notifyTimestamp: new Date(notifyDatetime),\r\n        contacts\r\n      });\r\n    }\r\n\r\n    return tasks;\r\n  }\r\n\r\n  xmlToContacts(xml: string | Element, tag?): Contact[] {\r\n    let root;\r\n\r\n    if (typeof xml === 'string') {\r\n      let parser: DOMParser = new DOMParser();\r\n      root = parser.parseFromString(xml, 'text/xml');\r\n    } else {\r\n      root = xml;\r\n    }\r\n\r\n    let contacts: Contact[] = [];\r\n    let contactElements = root.querySelector(tag ? tag : 'contacts');\r\n\r\n    for (let i = 0; i < contactElements.childNodes.length; i++) {\r\n      let contactElement = contactElements.childNodes.item(i) as Element;\r\n\r\n      let id = contactElement.querySelector('id').innerHTML;\r\n      let name = contactElement.querySelector('name').innerHTML;\r\n      let phone_number = contactElement.querySelector('phone-number').innerHTML;\r\n      contacts.push({id: +id, name, phone_number});\r\n    }\r\n\r\n    return contacts;\r\n  }\r\n\r\n  private createTaskElement(task: Task): Element {\r\n    let taskElement = document.createElement('task');\r\n\r\n    if (task.id) {\r\n      taskElement.appendChild(this.createElement('id', task.id));\r\n    }\r\n\r\n    taskElement.appendChild(this.createElement('name', task.name));\r\n    taskElement.appendChild(this.createElement('description', task.description));\r\n    taskElement.appendChild(this.createElement('completed', task.completed));\r\n    taskElement.appendChild(this.createElement('fixed', task.fixed));\r\n\r\n    let notifyDatetime: string = this._datePipe.transform(task.notifyTimestamp, \"yyyy-MM-dd HH:mm\");\r\n    taskElement.appendChild(this.createElement('notify-timestamp', notifyDatetime));\r\n\r\n    if (task.contacts) {\r\n      let contacts = document.createElement('task-contacts');\r\n      for (let contact of task.contacts) {\r\n        contacts.appendChild(this.createContactElement(contact));\r\n      }\r\n      taskElement.appendChild(contacts);\r\n    }\r\n\r\n    return taskElement;\r\n  }\r\n\r\n  private createContactElement(contact: Contact): Element {\r\n    let contactElement = document.createElement('contact');\r\n\r\n    if (contact.id) {\r\n      contactElement.appendChild(this.createElement('id', contact.id));\r\n    }\r\n\r\n    contactElement.appendChild(this.createElement('name', contact.name));\r\n    contactElement.appendChild(this.createElement('phone-number', contact.phone_number));\r\n\r\n    return contactElement;\r\n  }\r\n\r\n  private createElement(elementName, content): Element {\r\n    let element = document.createElement(elementName);\r\n    element.innerText = content;\r\n    return element;\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Task} from '../../../shared/interfaces';\r\n\r\n@Pipe({\r\n  name: 'fixedTasks',\r\n  pure: false\r\n})\r\nexport class FixedTasksPipe implements PipeTransform {\r\n\r\n  transform(tasks: Task[], filter: 'fixed' | 'unfixed' | string): Task[] {\r\n    if (!tasks) return [];\r\n    if (tasks && filter === 'fixed') {\r\n      return tasks.filter((task: Task) => task.fixed);\r\n    } else if (tasks && filter === 'unfixed') {\r\n      return tasks.filter((task: Task) => !task.fixed);\r\n    }\r\n  }\r\n}\r\n","<form\r\n    [formGroup]=\"form\"\r\n    (ngSubmit)=\"submitHandler()\"\r\n>\r\n  <input\r\n      mat-dialog-title\r\n      formControlName=\"name\"\r\n      autocomplete=\"false\"\r\n      placeholder=\"Enter a task name...\"\r\n  >\r\n\r\n  <div class=\"columns flex-row hor-flex-center\">\r\n    <div class=\"left-column flex-column ver-space-between\">\r\n      <textarea\r\n          textAreaAutoResize\r\n          formControlName=\"description\"\r\n          placeholder=\"Enter a task description\"\r\n      >\r\n      </textarea>\r\n\r\n      <div class=\"flex-column ver-space-between\">\r\n        <input\r\n            class=\"underline\"\r\n            type=\"date\"\r\n            formControlName=\"date\"\r\n            autocomplete=\"false\"\r\n        >\r\n        <input\r\n            class=\"underline\"\r\n            type=\"time\"\r\n            formControlName=\"time\"\r\n            autocomplete=\"false\"\r\n        >\r\n      </div>\r\n    </div>\r\n    <div class=\"right-column flex-column ver-space-between\">\r\n\r\n      <ul formGroupName=\"contacts\">\r\n        <li *ngFor=\"let contact of contactsService.contacts\">\r\n          <mat-checkbox formControlName=\"{{contact.id}}\">\r\n            {{contact.name}} {{contact.phone_number}}\r\n          </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div mat-dialog-actions class=\"flex-row hor-flex-center\">\r\n    <button\r\n        mat-button\r\n        [disabled]=\"form.invalid\"\r\n    >\r\n      {{submitValue}}\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {ContactsService} from '../../../../shared/services/contacts.service';\r\nimport {TasksService} from '../../../../shared/services/tasks.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Contact, Task} from '../../../../../shared/interfaces';\r\nimport {DatePipe} from '@angular/common';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-task-action',\r\n  templateUrl: './task-action.component.html',\r\n  styleUrls: ['./task-action.component.css']\r\n})\r\nexport class TaskActionComponent implements OnInit {\r\n\r\n  task: Task;\r\n  form: FormGroup;\r\n\r\n  submitValue;\r\n  submitHandler: Function;\r\n\r\n  constructor(\r\n    public contactsService: ContactsService,\r\n    private tasksService: TasksService,\r\n    private _datePipe: DatePipe,\r\n    private router: Router,\r\n    private thisDialog: MatDialogRef<TaskActionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: object\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n\r\n    if (this.data['action'] === 'create') {\r\n      this.setCreateFormValues();\r\n    }\r\n    if (this.data['action'] === 'edit') {\r\n      this.setEditFormValues();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    this.form = new FormGroup({\r\n      'name': new FormControl(null, Validators.required),\r\n      'description': new FormControl(null, Validators.required),\r\n      'date': new FormControl(null, Validators.required),\r\n      'time': new FormControl(null, Validators.required),\r\n      'contacts': new FormGroup({})\r\n    });\r\n\r\n    let contacts: FormGroup = this.form.get('contacts') as FormGroup;\r\n    for (let contact of this.contactsService.contacts) {\r\n      contacts.addControl('' + contact.id, new FormControl(false));\r\n    }\r\n  }\r\n\r\n  private setEditFormValues() {\r\n    this.task = Object.assign({}, this.data['task']);\r\n\r\n    this.form.get('name').setValue(this.task.name);\r\n    this.form.get('description').setValue(this.task.description);\r\n    this.form.get('date').setValue(this._datePipe.transform(this.task.notifyTimestamp, \"yyyy-MM-dd\"));\r\n    this.form.get('time').setValue(this._datePipe.transform(this.task.notifyTimestamp, \"HH:mm\"));\r\n\r\n    let contacts: FormGroup = this.form.get('contacts') as FormGroup;\r\n    for (let contact of this.task.contacts) {\r\n      contacts.get('' + contact.id).setValue(true);\r\n    }\r\n\r\n    this.submitValue = 'Edit';\r\n    this.submitHandler = () => this.edit();\r\n  }\r\n\r\n  private setCreateFormValues() {\r\n    this.submitValue = 'Create';\r\n\r\n    let date = new Date();\r\n    this.form.get('date').setValue(this._datePipe.transform(date, \"yyyy-MM-dd\"));\r\n    this.form.get('time').setValue(this._datePipe.transform(date, \"HH:mm\"));\r\n\r\n    this.submitHandler = () => this.create();\r\n  }\r\n\r\n  edit() {\r\n    this.task.name = this.form.value.name;\r\n    this.task.description = this.form.value.description;\r\n    this.task.notifyTimestamp = new Date(this.form.value.date + ' ' + this.form.value.time);\r\n    this.task.completed = (new Date() > this.task.notifyTimestamp);\r\n    this.task.contacts = this.getCheckedContactsArray();\r\n\r\n    this.tasksService.update(this.task);\r\n    this.thisDialog.close(true);\r\n    this.router.navigate([], {replaceUrl: true});\r\n  }\r\n\r\n  create() {\r\n    this.task = {\r\n      name: this.form.value.name,\r\n      description: this.form.value.description,\r\n      fixed: false,\r\n      notifyTimestamp: new Date(this.form.value.date + ' ' + this.form.value.time),\r\n      contacts: this.getCheckedContactsArray(),\r\n    };\r\n    this.task.completed = (new Date() > this.task.notifyTimestamp);\r\n\r\n    this.tasksService.add(this.task);\r\n    this.thisDialog.close(true);\r\n    this.router.navigate([], {replaceUrl: true});\r\n  }\r\n\r\n  private getCheckedContactsArray(): Contact[] {\r\n    let contacts: Contact[] = [];\r\n    let contactsGroup: FormGroup = this.form.get('contacts') as FormGroup;\r\n\r\n    for (let controlName in contactsGroup.controls) {\r\n      if (contactsGroup.controls[controlName].value) {\r\n        let contact = this.contactsService.contacts.find(\r\n          (ct: Contact) => ct.id === +controlName\r\n        );\r\n        contacts.push(contact);\r\n      }\r\n    }\r\n    return contacts;\r\n  }\r\n}\r\n","<div\r\n    class=\"task-card\"\r\n    [ngClass]=\"{ selected: isSelected }\"\r\n    (click)=\"hideSelect()\"\r\n    id=\"{{task.id}}\"\r\n>\r\n  <div class=\"title name\">\r\n    {{task.name}}\r\n  </div>\r\n  <div class=\"description\">\r\n    {{task.description}}\r\n  </div>\r\n  <div class=\"date-contacts-block\">\r\n    <div class=\"date notify-timestamp flex-row ver-flex-center hor-flex-center\">\r\n      {{task.notifyTimestamp| date : 'short'}}\r\n      <img *ngIf=\"task.completed\" class=\"alarm-clock-completed\">\r\n      <img *ngIf=\"!task.completed\" class=\"alarm-clock\">\r\n    </div>\r\n    <div class=\"contacts\">\r\n      <div\r\n          *ngFor=\"let contact of task.contacts.slice(0, 3);\"\r\n          (click)=\"openContacts()\"\r\n          class=\"contact flex-row ver-flex-center hor-flex-center\"\r\n      >\r\n        {{contact.name[0].toUpperCase()}}\r\n      </div>\r\n      <div\r\n          *ngIf=\"task.contacts.length > 3\"\r\n          class=\"contact flex-row ver-flex-center hor-flex-center\"\r\n          (click)=\"openContacts()\"\r\n      >\r\n        +{{task.contacts.length - 3}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"actions\">\r\n    <img\r\n        class=\"push-pin\"\r\n        [ngClass]=\"{ 'pushed': task.fixed, 'un-pushed': !task.fixed }\"\r\n        (click)=\"Fix()\"\r\n    />\r\n    <img class=\"menu\" [matMenuTriggerFor]=\"menu\"/>\r\n  </div>\r\n  <mat-menu\r\n    #menu=\"matMenu\"\r\n    xPosition=\"before\"\r\n  >\r\n    <button mat-menu-item (click)=\"onEdit()\">Edit</button>\r\n    <button mat-menu-item (click)=\"onCopy()\">Copy</button>\r\n    <button mat-menu-item (click)=\"onDelete()\">Delete</button>\r\n  </mat-menu>\r\n</div>\r\n","import {AfterViewInit, Component, ElementRef, Input} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\n\r\nimport {Task} from '../../../../../shared/interfaces';\r\nimport {TasksService} from '../../../../shared/services/tasks.service';\r\nimport {DialogOverviewService} from \"../../../../shared/services/dialog-overview.service\";\r\nimport {TaskActionComponent} from \"../task-action/task-action.component\";\r\nimport {TaskContactsComponent} from \"../task-contacts/task-contacts.component\";\r\n\r\n@Component({\r\n  selector: 'app-task-card',\r\n  templateUrl: './task-card.component.html',\r\n  styleUrls: ['./task-card.component.css']\r\n})\r\n\r\nexport class TaskCardComponent implements AfterViewInit {\r\n\r\n  @Input() task: Task;\r\n\r\n  isSelected;\r\n\r\n  constructor(\r\n    private tasksService: TasksService,\r\n    private route: ActivatedRoute,\r\n    private dialogOverview: DialogOverviewService,\r\n    private el: ElementRef\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (+params[\"select\"] === this.task.id) {\r\n        this.isSelected = true;\r\n        this.el.nativeElement.scrollIntoView({behavior: 'smooth'});\r\n      }\r\n    })\r\n  }\r\n\r\n  onCopy() {\r\n    let clone: Task = Object.assign({}, this.task);\r\n    clone.id = null;\r\n    this.tasksService.add(clone);\r\n  }\r\n\r\n  onDelete() {\r\n    this.tasksService.delete(this.task);\r\n  }\r\n\r\n  onEdit() {\r\n    this.dialogOverview.openDialog(TaskActionComponent, {\r\n      action: 'edit',\r\n      task: {...this.task}\r\n    });\r\n  }\r\n\r\n  Fix() {\r\n    let clone: Task = Object.assign(this.task);\r\n    clone.fixed = !clone.fixed;\r\n    this.tasksService.update(clone);\r\n  }\r\n\r\n  openContacts() {\r\n    this.dialogOverview.openDialog(TaskContactsComponent, {\r\n      task: {...this.task}\r\n    });\r\n  }\r\n\r\n  hideSelect() {\r\n    this.isSelected = false;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2 mat-dialog-title>\r\n    {{task.name}}\r\n  </h2>\r\n\r\n  <div>\r\n    <span class=\"text\">\r\n      <b>Contacts:</b>\r\n    </span>\r\n    <ul>\r\n      <li *ngFor=\"let contact of task.contacts\">\r\n        <span (click)=\"goto(contact)\">\r\n          <b>{{contact.name}}</b> {{contact.phone_number}}\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from \"@angular/core\";\r\nimport {Contact, Task} from \"../../../../../shared/interfaces\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-task-contacts',\r\n  templateUrl: './task-contacts.component.html',\r\n  styleUrls: ['./task-contacts.component.css']\r\n})\r\nexport class TaskContactsComponent implements OnInit {\r\n  task: Task;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private thisDialog: MatDialogRef<TaskContactsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: object) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.task = this.data[\"task\"];\r\n  }\r\n\r\n  goto(contact: Contact) {\r\n    this.router.navigate(['/profile', 'contacts'], {\r\n      queryParams: {\r\n        select: contact.id\r\n      }\r\n    });\r\n    this.thisDialog.close();\r\n  }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {TaskActionComponent} from \"./components/task-action/task-action.component\";\r\nimport {TaskCardComponent} from \"./components/task-card/task-card.component\";\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport {ProfileSharedModule} from \"../../shared/profile-shared.module\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {TaskContactsComponent} from \"./components/task-contacts/task-contacts.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TaskActionComponent,\r\n    TaskCardComponent,\r\n    TaskContactsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ProfileSharedModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    TaskActionComponent,\r\n    TaskCardComponent,\r\n    TaskContactsComponent,\r\n    ProfileSharedModule,\r\n  ]\r\n})\r\nexport class TasksSharedModule {\r\n\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav mode=\"side\" opened>\r\n    <mat-toolbar>\r\n\r\n      <mat-toolbar-row>\r\n        <button\r\n            mat-raised-button\r\n            (click)=\"onAddTask()\"\r\n        >\r\n          Add Task\r\n        </button>\r\n      </mat-toolbar-row>\r\n\r\n      <mat-toolbar-row>\r\n        <button mat-raised-button (click)=\"onImport()\">\r\n          Import\r\n        </button>\r\n      </mat-toolbar-row>\r\n\r\n      <mat-toolbar-row>\r\n        <button mat-raised-button (click)=\"onExport()\">\r\n          Export\r\n        </button>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n\r\n    <div class=\"search-box\">\r\n      <app-search\r\n          [searchOptions]=\"searchOptions\"\r\n          (onInputEvent)=\"onSearch($event)\"\r\n          #searchComponent\r\n      >\r\n      </app-search>\r\n    </div>\r\n\r\n    <div *ngIf=\"!noSearchedTasks\">\r\n      <app-isotope-container\r\n          selector=\".task\"\r\n          title=\"Searched tasks\"\r\n      >\r\n        <app-task-card\r\n            *ngFor=\"let task of searchedTasks; let last = last\"\r\n            [task]=\"task\"\r\n            class=\"task\"\r\n        >\r\n          {{ last ? searchComponent.searchAndMark() : '' }}\r\n        </app-task-card>\r\n      </app-isotope-container>\r\n    </div>\r\n\r\n    <div *ngIf=\"!searchNow && !searchedTasks.length &&\r\n                (tasksService.tasks | fixedTasks: 'fixed').length\"\r\n    >\r\n      <app-isotope-container\r\n          selector=\".task\"\r\n          title=\"Fixed tasks\"\r\n      >\r\n        <app-task-card\r\n            *ngFor=\"let task of tasksService.tasks | fixedTasks: 'fixed'\"\r\n            [task]=\"task\"\r\n            class=\"task\"\r\n        >\r\n        </app-task-card>\r\n      </app-isotope-container>\r\n    </div>\r\n\r\n    <div *ngIf=\"!searchNow && !searchedTasks.length &&\r\n                (tasksService.tasks | fixedTasks: 'unfixed').length\"\r\n    >\r\n      <app-isotope-container\r\n          selector=\".task\"\r\n          title=\"Other tasks\"\r\n      >\r\n        <app-task-card\r\n            *ngFor=\"let task of tasksService.tasks | fixedTasks: 'unfixed'\"\r\n            [task]=\"task\"\r\n            class=\"task\"\r\n        >\r\n        </app-task-card>\r\n      </app-isotope-container>\r\n    </div>\r\n\r\n    <div\r\n        class=\"flex-row hor-flex-center ver-flex-center\"\r\n    >\r\n      <h2 *ngIf=\"!tasksService.tasks.length\">No tasks</h2>\r\n      <h2 *ngIf=\"searchNow && noSearchedTasks\">No searched tasks</h2>\r\n    </div>\r\n\r\n  </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {TasksService} from '../../shared/services/tasks.service';\r\nimport {Task} from 'src/app/shared/interfaces';\r\nimport {SearchOptions} from \"../../shared/components/search/search.component\";\r\nimport {TaskActionComponent} from \"../shared/components/task-action/task-action.component\";\r\nimport {DialogOverviewService} from \"../../shared/services/dialog-overview.service\";\r\n\r\n@Component({\r\n  selector: 'app-tasks-page',\r\n  templateUrl: './tasks-page.component.html',\r\n  styleUrls: ['./tasks-page.component.css'],\r\n})\r\nexport class TasksPageComponent implements OnInit {\r\n\r\n  searchOptions: SearchOptions;\r\n  searchedTasks: Task[] = [];\r\n  noSearchedTasks: boolean = true;\r\n  searchNow = false;\r\n\r\n  constructor(\r\n    public tasksService: TasksService,\r\n    private dialogOverview: DialogOverviewService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.searchOptions = {\r\n      uniqueAttribute: 'id',\r\n      selector: '.task',\r\n      subSelectors: [\r\n        {name: 'name', selector: '.name', isActive: false},\r\n        {name: 'description', selector: '.description', isActive: false},\r\n        {name: 'time', selector: '.notify-timestamp', isActive: false},\r\n      ]\r\n    };\r\n  }\r\n\r\n  onSearch(event) {\r\n    if (event[\"value\"] === '') {\r\n      this.searchedTasks = [];\r\n      this.noSearchedTasks = true;\r\n      this.searchNow = false;\r\n      return;\r\n    }\r\n    this.tasksService.search(event[\"value\"], event[\"subSelectors\"])\r\n      .subscribe((tasks: Task[]) => {\r\n        this.searchedTasks = tasks;\r\n        this.noSearchedTasks = !this.searchedTasks.length;\r\n        this.searchNow = true;\r\n      });\r\n  }\r\n\r\n  onExport() {\r\n    if (this.searchedTasks.length) {\r\n      this.tasksService.export(this.searchedTasks);\r\n    } else {\r\n      this.tasksService.export();\r\n    }\r\n  }\r\n\r\n  onImport() {\r\n    this.tasksService.import();\r\n  }\r\n\r\n  onAddTask() {\r\n    this.dialogOverview.openDialog(TaskActionComponent, {\r\n      action: 'create',\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {TaskActionComponent} from './shared/components/task-action/task-action.component';\r\nimport {TasksPageComponent} from './tasks-page/tasks-page.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FixedTasksPipe} from \"./pipes/fixed-tasks.pipe\";\r\nimport {TasksSharedModule} from \"./shared/tasks-shared.module\";\r\nimport {TaskContactsComponent} from \"./shared/components/task-contacts/task-contacts.component\";\r\nimport {DialogOverviewService} from \"../shared/services/dialog-overview.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TasksPageComponent,\r\n    FixedTasksPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TasksSharedModule,\r\n\r\n    RouterModule.forChild([\r\n      {path: '', component: TasksPageComponent},\r\n    ]),\r\n  ],\r\n\r\n  entryComponents: [\r\n    TaskActionComponent,\r\n    TaskContactsComponent\r\n  ],\r\n\r\n  providers: [\r\n    DialogOverviewService\r\n  ]\r\n\r\n})\r\nexport class TasksModule {\r\n\r\n}\r\n","import {Directive, ElementRef, HostListener, Renderer2} from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[textAreaAutoResize]\"\r\n})\r\nexport class TextAreaAutoResize {\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.renderer.setStyle(this.element.nativeElement, 'resize', 'none');\r\n  }\r\n\r\n  @HostListener('keyup') onKeyup() {\r\n    this.renderer.setStyle(this.element.nativeElement, 'overflow', 'hidden');\r\n    this.renderer.setStyle(this.element.nativeElement, 'height', '0');\r\n\r\n    let height = +this.element.nativeElement.style.minHeight + +this.element.nativeElement.scrollHeight;\r\n\r\n    this.renderer.setStyle(\r\n      this.element.nativeElement,\r\n      'height',\r\n      height + 'px'\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}