{"version":3,"sources":["webpack:///src/app/profile/contacts/contact-action/contact-action.component.html","webpack:///src/app/profile/contacts/contact-action/contact-action.component.ts","webpack:///src/app/profile/contacts/contact-card/contact-card.component.html","webpack:///src/app/profile/contacts/contact-card/contact-card.component.ts","webpack:///src/app/profile/contacts/contacts-page/contacts-page.component.html","webpack:///src/app/profile/contacts/contacts-page/contacts-page.component.ts","webpack:///src/app/profile/contacts/contacts.module.ts"],"names":["ContactActionComponent","contactsService","router","thisDialog","data","initForm","setCreateFormValues","setEditFormValues","form","required","submitValue","submitHandler","create","contact","Object","assign","get","setValue","name","phone_number","edit","value","phone","update","close","navigate","replaceUrl","add","id","ContactCardComponent","tasksService","dialogOverview","route","el","queryParams","subscribe","params","isSelected","nativeElement","scrollIntoView","behavior","openDialog","action","tasks","forEach","task","contacts","filter","ct","clone","ContactsPageComponent","searchedContacts","searchNow","noSearchedContacts","searchOptions","uniqueAttribute","selector","subSelectors","isActive","event","search","length","ContactsModule"],"mappings":"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","file":"contacts-contacts-module-ngfactory-es5.js","sourcesContent":["<form [formGroup]=\"form\" (ngSubmit)=\"submitHandler()\">\r\n  <input\r\n      mat-dialog-title\r\n      formControlName=\"name\"\r\n      autocomplete=\"false\"\r\n      placeholder=\"Enter a contact name...\"\r\n  >\r\n\r\n  <input\r\n      formControlName=\"phone\"\r\n      autocomplete=\"false\"\r\n      placeholder=\"Enter a contact phone...\"\r\n  >\r\n\r\n  <div mat-dialog-actions class=\"flex-row hor-flex-center\">\r\n    <button mat-button [disabled]=\"form.invalid\"\r\n    >{{submitValue}}</button>\r\n  </div>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\nimport {Contact} from '../../../shared/interfaces';\r\nimport {ContactsService} from '../../shared/services/contacts.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-contact-action',\r\n  templateUrl: './contact-action.component.html',\r\n  styleUrls: ['./contact-action.component.css']\r\n})\r\nexport class ContactActionComponent implements OnInit {\r\n\r\n  contact: Contact;\r\n  form: FormGroup;\r\n\r\n  submitValue: string;\r\n  submitHandler: Function;\r\n\r\n  constructor(\r\n    private contactsService: ContactsService,\r\n    private router: Router,\r\n\r\n    private thisDialog: MatDialogRef<ContactActionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: object\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n\r\n    if (this.data['action'] === 'create') {\r\n      this.setCreateFormValues();\r\n    }\r\n    if (this.data['action'] === 'edit') {\r\n      this.setEditFormValues();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    this.form = new FormGroup({\r\n      'name': new FormControl(null, Validators.required),\r\n      'phone': new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  private setCreateFormValues() {\r\n    this.submitValue = 'Create';\r\n    this.submitHandler = () => this.create();\r\n  }\r\n\r\n  private setEditFormValues() {\r\n    this.contact = Object.assign({}, this.data['contact']);\r\n\r\n    this.form.get('name').setValue(this.contact.name);\r\n    this.form.get('phone').setValue(this.contact.phone_number);\r\n\r\n    this.submitValue = 'Edit';\r\n    this.submitHandler = () => this.edit();\r\n  }\r\n\r\n  edit() {\r\n    this.contact.name = this.form.value.name;\r\n    this.contact.phone_number = this.form.value.phone;\r\n    this.contactsService.update(this.contact);\r\n    this.thisDialog.close(true);\r\n    this.router.navigate([], { replaceUrl: true});\r\n  }\r\n\r\n  create() {\r\n    this.contact = {\r\n      name: this.form.value.name,\r\n      phone_number: this.form.value.phone\r\n    };\r\n\r\n    this.contactsService.add(this.contact);\r\n    this.thisDialog.close(true);\r\n    this.router.navigate([], { replaceUrl: true});\r\n  }\r\n}\r\n","<div\r\n    class=\"contact-card\"\r\n    [ngClass]=\"{ selected: isSelected }\"\r\n    id=\"{{contact.id}}\"\r\n    (click)=\"hideSelect()\"\r\n>\r\n  <div class=\"title name\">\r\n    {{contact.name}}\r\n  </div>\r\n  <div class=\"description phone\">\r\n    {{contact.phone_number}}\r\n  </div>\r\n  <div class=\"actions\">\r\n    <img class=\"menu\" [matMenuTriggerFor]=\"menu\"/>\r\n  </div>\r\n  <mat-menu\r\n    #menu=\"matMenu\"\r\n    xPosition=\"before\"\r\n  >\r\n    <button mat-menu-item (click)=\"onEdit()\">Edit</button>\r\n    <button mat-menu-item (click)=\"onCopy()\">Copy</button>\r\n    <button mat-menu-item (click)=\"onDelete()\">Delete</button>\r\n  </mat-menu>\r\n</div>\r\n","import {AfterViewInit, Component, ElementRef, Input} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\n\r\nimport {Contact} from '../../../shared/interfaces';\r\nimport {ContactsService} from '../../shared/services/contacts.service';\r\nimport {ContactActionComponent} from \"../contact-action/contact-action.component\";\r\nimport {DialogOverviewService} from \"../../shared/services/dialog-overview.service\";\r\nimport {TasksService} from \"../../shared/services/tasks.service\";\r\n\r\n@Component({\r\n  selector: 'app-contact-card',\r\n  templateUrl: './contact-card.component.html',\r\n  styleUrls: ['./contact-card.component.css']\r\n})\r\nexport class ContactCardComponent implements AfterViewInit {\r\n\r\n  @Input() contact: Contact;\r\n  isSelected: boolean;\r\n\r\n  constructor(\r\n    private contactsService: ContactsService,\r\n    private tasksService: TasksService,\r\n    private dialogOverview: DialogOverviewService,\r\n    private route: ActivatedRoute,\r\n    private el: ElementRef\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (+params[\"select\"] === this.contact.id) {\r\n        this.isSelected = true;\r\n        this.el.nativeElement.scrollIntoView({behavior: 'smooth'});\r\n      }\r\n    })\r\n  }\r\n\r\n  onEdit() {\r\n    this.dialogOverview.openDialog(ContactActionComponent, {\r\n      action: 'edit',\r\n      contact: {...this.contact}\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    this.contactsService.delete(this.contact);\r\n    this.tasksService.tasks.forEach(\r\n      task => task.contacts = task.contacts.filter(ct => ct.id !== this.contact.id)\r\n    );\r\n  }\r\n\r\n  onCopy() {\r\n    let clone: Contact = Object.assign({}, this.contact);\r\n    clone.id = null;\r\n    this.contactsService.add(clone);\r\n  }\r\n\r\n  hideSelect() {\r\n    this.isSelected = false;\r\n  }\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav mode=\"side\" opened>\r\n    <mat-toolbar>\r\n\r\n      <mat-toolbar-row>\r\n        <button\r\n            mat-raised-button\r\n            (click)=\"onAddContact()\"\r\n        >\r\n          Add Contact\r\n        </button>\r\n      </mat-toolbar-row>\r\n\r\n      <mat-toolbar-row>\r\n        <button mat-raised-button (click)=\"onImport()\">\r\n          Import\r\n        </button>\r\n      </mat-toolbar-row>\r\n\r\n      <mat-toolbar-row>\r\n        <button mat-raised-button (click)=\"onExport()\">\r\n          Export\r\n        </button>\r\n      </mat-toolbar-row>\r\n\r\n    </mat-toolbar>\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <div class=\"search-box\">\r\n      <app-search\r\n          [searchOptions]=\"searchOptions\"\r\n          (onInputEvent)=\"onSearch($event)\"\r\n          #searchComponent\r\n      >\r\n      </app-search>\r\n    </div>\r\n\r\n    <div *ngIf=\"!noSearchedContacts\">\r\n      <app-isotope-container\r\n          selector=\".contact\"\r\n          title=\"Searched contacts\"\r\n      >\r\n        <app-contact-card\r\n            *ngFor=\"let contact of searchedContacts; let last = last\"\r\n            [contact]=\"contact\"\r\n            class=\"contact\"\r\n        >\r\n          {{ last ? searchComponent.searchAndMark() : '' }}\r\n        </app-contact-card>\r\n      </app-isotope-container>\r\n    </div>\r\n\r\n    <div *ngIf=\"!searchNow && contactsService.contacts.length\">\r\n      <app-isotope-container\r\n          selector=\".contact\"\r\n      >\r\n        <app-contact-card\r\n            *ngFor=\"let contact of contactsService.contacts\"\r\n            [contact]=\"contact\"\r\n            class=\"contact\"\r\n        >\r\n        </app-contact-card>\r\n      </app-isotope-container>\r\n    </div>\r\n\r\n    <div\r\n        class=\"flex-row hor-flex-center ver-flex-center\"\r\n    >\r\n      <h2 *ngIf=\"!contactsService.contacts.length\">No contacts</h2>\r\n      <h2 *ngIf=\"searchNow && noSearchedContacts\">No searched contacts</h2>\r\n    </div>\r\n\r\n  </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {ContactsService} from '../../shared/services/contacts.service';\r\nimport {Contact} from '../../../shared/interfaces';\r\nimport {DialogOverviewService} from \"../../shared/services/dialog-overview.service\";\r\nimport {SearchOptions} from \"../../shared/components/search/search.component\";\r\nimport {ContactActionComponent} from \"../contact-action/contact-action.component\";\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts-page.component.html',\r\n  styleUrls: ['./contacts-page.component.css']\r\n})\r\nexport class ContactsPageComponent implements OnInit {\r\n\r\n  searchOptions: SearchOptions;\r\n  searchedContacts: Contact[] = [];\r\n  searchNow: boolean = false;\r\n  noSearchedContacts: boolean = true;\r\n\r\n  constructor(\r\n    public contactsService: ContactsService,\r\n    public dialogOverview: DialogOverviewService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.searchedContacts = [];\r\n    this.searchOptions = {\r\n      uniqueAttribute: 'id',\r\n      selector: '.contact',\r\n      subSelectors: [\r\n        {name: 'name', selector: '.name', isActive: false},\r\n        {name: 'phone', selector: '.phone', isActive: false},\r\n      ]\r\n    };\r\n  }\r\n\r\n  onSearch(event) {\r\n    if (event[\"value\"] === '') {\r\n      this.searchedContacts = [];\r\n      this.noSearchedContacts = true;\r\n      this.searchNow = false;\r\n      return;\r\n    }\r\n    this.contactsService.search(event[\"value\"], event[\"subSelectors\"])\r\n      .subscribe((contacts: Contact[]) => {\r\n        this.searchedContacts = contacts;\r\n        this.noSearchedContacts = !this.searchedContacts.length;\r\n        this.searchNow = true;\r\n      });\r\n  }\r\n\r\n  onExport() {\r\n    if (this.searchedContacts.length) {\r\n      this.contactsService.export(this.searchedContacts);\r\n    } else {\r\n      this.contactsService.export();\r\n    }\r\n  }\r\n\r\n  onImport() {\r\n    this.contactsService.import();\r\n  }\r\n\r\n  onAddContact() {\r\n    this.dialogOverview.openDialog(ContactActionComponent, {\r\n      action: 'create',\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nimport {ContactActionComponent} from './contact-action/contact-action.component';\r\nimport {ContactCardComponent} from './contact-card/contact-card.component';\r\nimport {ContactsPageComponent} from './contacts-page/contacts-page.component';\r\n\r\nimport {ProfileSharedModule} from '../shared/profile-shared.module';\r\nimport {DialogOverviewService} from \"../shared/services/dialog-overview.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContactActionComponent,\r\n    ContactCardComponent,\r\n    ContactsPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileSharedModule,\r\n    ReactiveFormsModule,\r\n\r\n    RouterModule.forChild([\r\n      {path: '', component: ContactsPageComponent},\r\n    ]),\r\n    ProfileSharedModule,\r\n  ],\r\n\r\n  entryComponents: [\r\n    ContactActionComponent\r\n  ],\r\n\r\n  providers: [\r\n    DialogOverviewService\r\n  ]\r\n\r\n})\r\nexport class ContactsModule {\r\n\r\n}\r\n"]}